// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/image.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// An image can be attached to a machine
type Image struct {
	Common               *Common                 `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	URL                  *wrappers.StringValue   `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	Features             []*wrappers.StringValue `protobuf:"bytes,3,rep,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *Image) GetURL() *wrappers.StringValue {
	if m != nil {
		return m.URL
	}
	return nil
}

func (m *Image) GetFeatures() []*wrappers.StringValue {
	if m != nil {
		return m.Features
	}
	return nil
}

type ImageCreateRequest struct {
	Image                *Image   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageCreateRequest) Reset()         { *m = ImageCreateRequest{} }
func (m *ImageCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ImageCreateRequest) ProtoMessage()    {}
func (*ImageCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{1}
}

func (m *ImageCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageCreateRequest.Unmarshal(m, b)
}
func (m *ImageCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageCreateRequest.Marshal(b, m, deterministic)
}
func (m *ImageCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageCreateRequest.Merge(m, src)
}
func (m *ImageCreateRequest) XXX_Size() int {
	return xxx_messageInfo_ImageCreateRequest.Size(m)
}
func (m *ImageCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageCreateRequest proto.InternalMessageInfo

func (m *ImageCreateRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type ImageUpdateRequest struct {
	Image                *Image   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageUpdateRequest) Reset()         { *m = ImageUpdateRequest{} }
func (m *ImageUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*ImageUpdateRequest) ProtoMessage()    {}
func (*ImageUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{2}
}

func (m *ImageUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageUpdateRequest.Unmarshal(m, b)
}
func (m *ImageUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageUpdateRequest.Marshal(b, m, deterministic)
}
func (m *ImageUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageUpdateRequest.Merge(m, src)
}
func (m *ImageUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_ImageUpdateRequest.Size(m)
}
func (m *ImageUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageUpdateRequest proto.InternalMessageInfo

func (m *ImageUpdateRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type ImageDeleteRequest struct {
	Identifiable         *Identifiable `protobuf:"bytes,1,opt,name=identifiable,proto3" json:"identifiable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ImageDeleteRequest) Reset()         { *m = ImageDeleteRequest{} }
func (m *ImageDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ImageDeleteRequest) ProtoMessage()    {}
func (*ImageDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{3}
}

func (m *ImageDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageDeleteRequest.Unmarshal(m, b)
}
func (m *ImageDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageDeleteRequest.Marshal(b, m, deterministic)
}
func (m *ImageDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageDeleteRequest.Merge(m, src)
}
func (m *ImageDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_ImageDeleteRequest.Size(m)
}
func (m *ImageDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageDeleteRequest proto.InternalMessageInfo

func (m *ImageDeleteRequest) GetIdentifiable() *Identifiable {
	if m != nil {
		return m.Identifiable
	}
	return nil
}

type ImageGetRequest struct {
	Identifiable         *Identifiable `protobuf:"bytes,1,opt,name=identifiable,proto3" json:"identifiable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ImageGetRequest) Reset()         { *m = ImageGetRequest{} }
func (m *ImageGetRequest) String() string { return proto.CompactTextString(m) }
func (*ImageGetRequest) ProtoMessage()    {}
func (*ImageGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{4}
}

func (m *ImageGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageGetRequest.Unmarshal(m, b)
}
func (m *ImageGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageGetRequest.Marshal(b, m, deterministic)
}
func (m *ImageGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageGetRequest.Merge(m, src)
}
func (m *ImageGetRequest) XXX_Size() int {
	return xxx_messageInfo_ImageGetRequest.Size(m)
}
func (m *ImageGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageGetRequest proto.InternalMessageInfo

func (m *ImageGetRequest) GetIdentifiable() *Identifiable {
	if m != nil {
		return m.Identifiable
	}
	return nil
}

type ImageFindRequest struct {
	FindCriteria         *FindCriteria `protobuf:"bytes,1,opt,name=findCriteria,proto3" json:"findCriteria,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ImageFindRequest) Reset()         { *m = ImageFindRequest{} }
func (m *ImageFindRequest) String() string { return proto.CompactTextString(m) }
func (*ImageFindRequest) ProtoMessage()    {}
func (*ImageFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{5}
}

func (m *ImageFindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFindRequest.Unmarshal(m, b)
}
func (m *ImageFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFindRequest.Marshal(b, m, deterministic)
}
func (m *ImageFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFindRequest.Merge(m, src)
}
func (m *ImageFindRequest) XXX_Size() int {
	return xxx_messageInfo_ImageFindRequest.Size(m)
}
func (m *ImageFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFindRequest proto.InternalMessageInfo

func (m *ImageFindRequest) GetFindCriteria() *FindCriteria {
	if m != nil {
		return m.FindCriteria
	}
	return nil
}

type ImageListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageListRequest) Reset()         { *m = ImageListRequest{} }
func (m *ImageListRequest) String() string { return proto.CompactTextString(m) }
func (*ImageListRequest) ProtoMessage()    {}
func (*ImageListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{6}
}

func (m *ImageListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageListRequest.Unmarshal(m, b)
}
func (m *ImageListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageListRequest.Marshal(b, m, deterministic)
}
func (m *ImageListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageListRequest.Merge(m, src)
}
func (m *ImageListRequest) XXX_Size() int {
	return xxx_messageInfo_ImageListRequest.Size(m)
}
func (m *ImageListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageListRequest proto.InternalMessageInfo

type ImageResponse struct {
	Image                *Image   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageResponse) Reset()         { *m = ImageResponse{} }
func (m *ImageResponse) String() string { return proto.CompactTextString(m) }
func (*ImageResponse) ProtoMessage()    {}
func (*ImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{7}
}

func (m *ImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageResponse.Unmarshal(m, b)
}
func (m *ImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageResponse.Marshal(b, m, deterministic)
}
func (m *ImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageResponse.Merge(m, src)
}
func (m *ImageResponse) XXX_Size() int {
	return xxx_messageInfo_ImageResponse.Size(m)
}
func (m *ImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageResponse proto.InternalMessageInfo

func (m *ImageResponse) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type ImageListResponse struct {
	Images               []*ImageResponse `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ImageListResponse) Reset()         { *m = ImageListResponse{} }
func (m *ImageListResponse) String() string { return proto.CompactTextString(m) }
func (*ImageListResponse) ProtoMessage()    {}
func (*ImageListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b462dcc8ce95f9, []int{8}
}

func (m *ImageListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageListResponse.Unmarshal(m, b)
}
func (m *ImageListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageListResponse.Marshal(b, m, deterministic)
}
func (m *ImageListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageListResponse.Merge(m, src)
}
func (m *ImageListResponse) XXX_Size() int {
	return xxx_messageInfo_ImageListResponse.Size(m)
}
func (m *ImageListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageListResponse proto.InternalMessageInfo

func (m *ImageListResponse) GetImages() []*ImageResponse {
	if m != nil {
		return m.Images
	}
	return nil
}

func init() {
	proto.RegisterType((*Image)(nil), "v1.Image")
	proto.RegisterType((*ImageCreateRequest)(nil), "v1.ImageCreateRequest")
	proto.RegisterType((*ImageUpdateRequest)(nil), "v1.ImageUpdateRequest")
	proto.RegisterType((*ImageDeleteRequest)(nil), "v1.ImageDeleteRequest")
	proto.RegisterType((*ImageGetRequest)(nil), "v1.ImageGetRequest")
	proto.RegisterType((*ImageFindRequest)(nil), "v1.ImageFindRequest")
	proto.RegisterType((*ImageListRequest)(nil), "v1.ImageListRequest")
	proto.RegisterType((*ImageResponse)(nil), "v1.ImageResponse")
	proto.RegisterType((*ImageListResponse)(nil), "v1.ImageListResponse")
}

func init() { proto.RegisterFile("v1/image.proto", fileDescriptor_b2b462dcc8ce95f9) }

var fileDescriptor_b2b462dcc8ce95f9 = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0xd5, 0x76, 0xab, 0xe0, 0x31, 0xd8, 0x66, 0x18, 0xaa, 0x22, 0x04, 0x53, 0x4e, 0x70,
	0x68, 0x4c, 0x56, 0x90, 0x38, 0x71, 0xa0, 0x68, 0x05, 0xb4, 0x93, 0xa7, 0x71, 0xe0, 0xe6, 0xb6,
	0xaf, 0xc1, 0x5a, 0x12, 0x07, 0xdb, 0x09, 0x7f, 0x09, 0xff, 0x12, 0x7f, 0x17, 0x8a, 0xed, 0xa5,
	0x8e, 0xd8, 0x54, 0x21, 0x6e, 0xf1, 0xfb, 0xbe, 0xdf, 0xd7, 0xa7, 0xf7, 0xa9, 0xf0, 0xa8, 0x49,
	0xa9, 0x28, 0x78, 0x86, 0x49, 0xa5, 0xa4, 0x91, 0x64, 0xd8, 0xa4, 0xd1, 0x61, 0x93, 0xd2, 0x95,
	0x2c, 0x0a, 0x59, 0xba, 0x61, 0x74, 0xd2, 0x9a, 0xd6, 0x58, 0x1a, 0xb1, 0x11, 0x7c, 0x99, 0x7b,
	0x6f, 0xf4, 0x3c, 0x93, 0x32, 0xcb, 0x91, 0xda, 0xd7, 0xb2, 0xde, 0xd0, 0x9f, 0x8a, 0x57, 0x15,
	0x2a, 0xed, 0xf4, 0xf8, 0xd7, 0x00, 0xf6, 0x3f, 0xb7, 0xd9, 0x24, 0x86, 0xb1, 0x0b, 0x9c, 0x0c,
	0x4e, 0x07, 0x2f, 0x1f, 0x9c, 0x41, 0xd2, 0xa4, 0xc9, 0xdc, 0x4e, 0x98, 0x57, 0x48, 0x02, 0xa3,
	0x2b, 0x76, 0x31, 0x19, 0x5a, 0xc3, 0xb3, 0xc4, 0x65, 0x27, 0x37, 0xd9, 0xc9, 0xa5, 0x51, 0xa2,
	0xcc, 0xbe, 0xf2, 0xbc, 0x46, 0xd6, 0x1a, 0xc9, 0x3b, 0xb8, 0xb7, 0x41, 0x6e, 0x6a, 0x85, 0x7a,
	0x32, 0x3a, 0x1d, 0xed, 0x84, 0x3a, 0x77, 0xfc, 0x16, 0x88, 0x5d, 0x6b, 0xae, 0x90, 0x1b, 0x64,
	0xf8, 0xa3, 0x46, 0x6d, 0xc8, 0x0b, 0xd8, 0xb7, 0x87, 0xf0, 0x2b, 0xde, 0x6f, 0x57, 0xb4, 0x36,
	0xe6, 0xe6, 0x1d, 0x76, 0x55, 0xad, 0xff, 0x05, 0xfb, 0xe2, 0xb1, 0x8f, 0x98, 0xe3, 0x16, 0x7b,
	0x03, 0x07, 0xe1, 0x45, 0x3d, 0x7d, 0x64, 0xe9, 0x60, 0xce, 0x7a, 0xae, 0x78, 0x01, 0x87, 0x36,
	0x6b, 0x81, 0xe6, 0xff, 0x82, 0x3e, 0xc1, 0x91, 0x0d, 0x3a, 0x17, 0xe5, 0x3a, 0x48, 0xda, 0x88,
	0x72, 0x3d, 0x57, 0xc2, 0xa0, 0x12, 0x3c, 0x4c, 0x3a, 0x0f, 0xe6, 0xac, 0xe7, 0x8a, 0x89, 0x4f,
	0xba, 0x10, 0xfa, 0x66, 0xa7, 0xf8, 0x35, 0x3c, 0x74, 0x27, 0x40, 0x5d, 0xc9, 0x52, 0xe3, 0xee,
	0x23, 0xbd, 0x87, 0xe3, 0x20, 0xc5, 0x53, 0xaf, 0x60, 0x6c, 0x55, 0x3d, 0x19, 0xd8, 0x7e, 0x8f,
	0xb7, 0x98, 0xb7, 0x30, 0x6f, 0x38, 0xfb, 0x3d, 0x84, 0x03, 0xab, 0x5c, 0xa2, 0x6a, 0xc4, 0x0a,
	0xc9, 0x0c, 0xc6, 0xae, 0x5e, 0xf2, 0xb4, 0xa3, 0x7a, 0x7d, 0x47, 0x7f, 0xa7, 0xb5, 0x90, 0x2b,
	0x37, 0x80, 0x7a, 0x6d, 0xdf, 0x01, 0xb9, 0x6a, 0x03, 0xa8, 0xd7, 0xf5, 0x6d, 0xd0, 0x14, 0x46,
	0x0b, 0x34, 0xe4, 0x71, 0xa7, 0x6c, 0x1b, 0xbd, 0xfd, 0x37, 0xf6, 0xda, 0x0a, 0xc8, 0x93, 0x4e,
	0x0a, 0x8a, 0x8b, 0x4e, 0xba, 0x69, 0xef, 0x7c, 0x33, 0xd8, 0x6b, 0xdf, 0x01, 0x14, 0x74, 0x74,
	0x07, 0xf4, 0x81, 0x7e, 0x9b, 0x66, 0xc2, 0x7c, 0xaf, 0x97, 0xc9, 0x4a, 0x16, 0xb4, 0x40, 0xc3,
	0xf3, 0xa9, 0x36, 0x7c, 0x75, 0xed, 0xbf, 0x79, 0x25, 0x68, 0x75, 0x9d, 0xb9, 0xff, 0x3c, 0x6d,
	0xd2, 0xe5, 0xd8, 0x7e, 0xcd, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x50, 0x79, 0xf5, 0x44, 0x49,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ImageServiceClient is the client API for ImageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageServiceClient interface {
	Create(ctx context.Context, in *ImageCreateRequest, opts ...grpc.CallOption) (*ImageResponse, error)
	Update(ctx context.Context, in *ImageUpdateRequest, opts ...grpc.CallOption) (*ImageResponse, error)
	Delete(ctx context.Context, in *ImageDeleteRequest, opts ...grpc.CallOption) (*ImageResponse, error)
	Get(ctx context.Context, in *ImageGetRequest, opts ...grpc.CallOption) (*ImageResponse, error)
	Find(ctx context.Context, in *ImageFindRequest, opts ...grpc.CallOption) (*ImageListResponse, error)
	List(ctx context.Context, in *ImageListRequest, opts ...grpc.CallOption) (*ImageListResponse, error)
}

type imageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewImageServiceClient(cc grpc.ClientConnInterface) ImageServiceClient {
	return &imageServiceClient{cc}
}

func (c *imageServiceClient) Create(ctx context.Context, in *ImageCreateRequest, opts ...grpc.CallOption) (*ImageResponse, error) {
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, "/v1.ImageService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) Update(ctx context.Context, in *ImageUpdateRequest, opts ...grpc.CallOption) (*ImageResponse, error) {
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, "/v1.ImageService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) Delete(ctx context.Context, in *ImageDeleteRequest, opts ...grpc.CallOption) (*ImageResponse, error) {
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, "/v1.ImageService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) Get(ctx context.Context, in *ImageGetRequest, opts ...grpc.CallOption) (*ImageResponse, error) {
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, "/v1.ImageService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) Find(ctx context.Context, in *ImageFindRequest, opts ...grpc.CallOption) (*ImageListResponse, error) {
	out := new(ImageListResponse)
	err := c.cc.Invoke(ctx, "/v1.ImageService/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageServiceClient) List(ctx context.Context, in *ImageListRequest, opts ...grpc.CallOption) (*ImageListResponse, error) {
	out := new(ImageListResponse)
	err := c.cc.Invoke(ctx, "/v1.ImageService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageServiceServer is the server API for ImageService service.
type ImageServiceServer interface {
	Create(context.Context, *ImageCreateRequest) (*ImageResponse, error)
	Update(context.Context, *ImageUpdateRequest) (*ImageResponse, error)
	Delete(context.Context, *ImageDeleteRequest) (*ImageResponse, error)
	Get(context.Context, *ImageGetRequest) (*ImageResponse, error)
	Find(context.Context, *ImageFindRequest) (*ImageListResponse, error)
	List(context.Context, *ImageListRequest) (*ImageListResponse, error)
}

// UnimplementedImageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedImageServiceServer struct {
}

func (*UnimplementedImageServiceServer) Create(ctx context.Context, req *ImageCreateRequest) (*ImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedImageServiceServer) Update(ctx context.Context, req *ImageUpdateRequest) (*ImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedImageServiceServer) Delete(ctx context.Context, req *ImageDeleteRequest) (*ImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedImageServiceServer) Get(ctx context.Context, req *ImageGetRequest) (*ImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedImageServiceServer) Find(ctx context.Context, req *ImageFindRequest) (*ImageListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedImageServiceServer) List(ctx context.Context, req *ImageListRequest) (*ImageListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterImageServiceServer(s *grpc.Server, srv ImageServiceServer) {
	s.RegisterService(&_ImageService_serviceDesc, srv)
}

func _ImageService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ImageService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Create(ctx, req.(*ImageCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ImageService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Update(ctx, req.(*ImageUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ImageService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Delete(ctx, req.(*ImageDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ImageService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Get(ctx, req.(*ImageGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageFindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ImageService/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).Find(ctx, req.(*ImageFindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ImageService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageServiceServer).List(ctx, req.(*ImageListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ImageService",
	HandlerType: (*ImageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ImageService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ImageService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ImageService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ImageService_Get_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _ImageService_Find_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ImageService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/image.proto",
}
