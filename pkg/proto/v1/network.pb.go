// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/network.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Network struct {
	Common               *Common               `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	PartitionID          *wrappers.StringValue `protobuf:"bytes,2,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	ProjectID            *wrappers.StringValue `protobuf:"bytes,3,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Labels               map[string]string     `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{0}
}

func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *Network) GetPartitionID() *wrappers.StringValue {
	if m != nil {
		return m.PartitionID
	}
	return nil
}

func (m *Network) GetProjectID() *wrappers.StringValue {
	if m != nil {
		return m.ProjectID
	}
	return nil
}

func (m *Network) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// a network which contains prefixes from which IP addresses can be allocated
type NetworkImmutable struct {
	Prefixes             []string              `protobuf:"bytes,1,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	DestinationPrefixes  []string              `protobuf:"bytes,2,rep,name=destinationPrefixes,proto3" json:"destinationPrefixes,omitempty"`
	Nat                  bool                  `protobuf:"varint,3,opt,name=nat,proto3" json:"nat,omitempty"`
	PrivateSuper         bool                  `protobuf:"varint,4,opt,name=privateSuper,proto3" json:"privateSuper,omitempty"`
	Underlay             bool                  `protobuf:"varint,5,opt,name=underlay,proto3" json:"underlay,omitempty"`
	Vrf                  *wrappers.UInt64Value `protobuf:"bytes,6,opt,name=vrf,proto3" json:"vrf,omitempty"`
	VrfShared            *wrappers.BoolValue   `protobuf:"bytes,7,opt,name=vrfShared,proto3" json:"vrfShared,omitempty"`
	ParentNetworkID      *wrappers.StringValue `protobuf:"bytes,8,opt,name=parentNetworkID,proto3" json:"parentNetworkID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NetworkImmutable) Reset()         { *m = NetworkImmutable{} }
func (m *NetworkImmutable) String() string { return proto.CompactTextString(m) }
func (*NetworkImmutable) ProtoMessage()    {}
func (*NetworkImmutable) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{1}
}

func (m *NetworkImmutable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkImmutable.Unmarshal(m, b)
}
func (m *NetworkImmutable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkImmutable.Marshal(b, m, deterministic)
}
func (m *NetworkImmutable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkImmutable.Merge(m, src)
}
func (m *NetworkImmutable) XXX_Size() int {
	return xxx_messageInfo_NetworkImmutable.Size(m)
}
func (m *NetworkImmutable) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkImmutable.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkImmutable proto.InternalMessageInfo

func (m *NetworkImmutable) GetPrefixes() []string {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

func (m *NetworkImmutable) GetDestinationPrefixes() []string {
	if m != nil {
		return m.DestinationPrefixes
	}
	return nil
}

func (m *NetworkImmutable) GetNat() bool {
	if m != nil {
		return m.Nat
	}
	return false
}

func (m *NetworkImmutable) GetPrivateSuper() bool {
	if m != nil {
		return m.PrivateSuper
	}
	return false
}

func (m *NetworkImmutable) GetUnderlay() bool {
	if m != nil {
		return m.Underlay
	}
	return false
}

func (m *NetworkImmutable) GetVrf() *wrappers.UInt64Value {
	if m != nil {
		return m.Vrf
	}
	return nil
}

func (m *NetworkImmutable) GetVrfShared() *wrappers.BoolValue {
	if m != nil {
		return m.VrfShared
	}
	return nil
}

func (m *NetworkImmutable) GetParentNetworkID() *wrappers.StringValue {
	if m != nil {
		return m.ParentNetworkID
	}
	return nil
}

type NetworkUsage struct {
	AvailableIPs         uint64   `protobuf:"varint,1,opt,name=availableIPs,proto3" json:"availableIPs,omitempty"`
	UsedIPs              uint64   `protobuf:"varint,2,opt,name=usedIPs,proto3" json:"usedIPs,omitempty"`
	AvailablePrefixes    uint64   `protobuf:"varint,3,opt,name=availablePrefixes,proto3" json:"availablePrefixes,omitempty"`
	UsedPrefixes         uint64   `protobuf:"varint,4,opt,name=usedPrefixes,proto3" json:"usedPrefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkUsage) Reset()         { *m = NetworkUsage{} }
func (m *NetworkUsage) String() string { return proto.CompactTextString(m) }
func (*NetworkUsage) ProtoMessage()    {}
func (*NetworkUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{2}
}

func (m *NetworkUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkUsage.Unmarshal(m, b)
}
func (m *NetworkUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkUsage.Marshal(b, m, deterministic)
}
func (m *NetworkUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkUsage.Merge(m, src)
}
func (m *NetworkUsage) XXX_Size() int {
	return xxx_messageInfo_NetworkUsage.Size(m)
}
func (m *NetworkUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkUsage.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkUsage proto.InternalMessageInfo

func (m *NetworkUsage) GetAvailableIPs() uint64 {
	if m != nil {
		return m.AvailableIPs
	}
	return 0
}

func (m *NetworkUsage) GetUsedIPs() uint64 {
	if m != nil {
		return m.UsedIPs
	}
	return 0
}

func (m *NetworkUsage) GetAvailablePrefixes() uint64 {
	if m != nil {
		return m.AvailablePrefixes
	}
	return 0
}

func (m *NetworkUsage) GetUsedPrefixes() uint64 {
	if m != nil {
		return m.UsedPrefixes
	}
	return 0
}

// NetworkSearchQuery can be used to search networks.
type NetworkSearchQuery struct {
	ID                   *wrappers.StringValue   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 *wrappers.StringValue   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PartitionID          *wrappers.StringValue   `protobuf:"bytes,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	ProjectID            *wrappers.StringValue   `protobuf:"bytes,4,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Prefixes             []*wrappers.StringValue `protobuf:"bytes,5,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	DestinationPrefixes  []*wrappers.StringValue `protobuf:"bytes,6,rep,name=destinationPrefixes,proto3" json:"destinationPrefixes,omitempty"`
	Nat                  *wrappers.BoolValue     `protobuf:"bytes,7,opt,name=nat,proto3" json:"nat,omitempty"`
	PrivateSuper         *wrappers.BoolValue     `protobuf:"bytes,8,opt,name=privateSuper,proto3" json:"privateSuper,omitempty"`
	Underlay             *wrappers.BoolValue     `protobuf:"bytes,9,opt,name=underlay,proto3" json:"underlay,omitempty"`
	Vrf                  *wrappers.UInt64Value   `protobuf:"bytes,10,opt,name=vrf,proto3" json:"vrf,omitempty"`
	VrfShared            *wrappers.BoolValue     `protobuf:"bytes,11,opt,name=vrfShared,proto3" json:"vrfShared,omitempty"`
	ParentNetworkID      *wrappers.StringValue   `protobuf:"bytes,12,opt,name=parentNetworkID,proto3" json:"parentNetworkID,omitempty"`
	Labels               map[string]string       `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *NetworkSearchQuery) Reset()         { *m = NetworkSearchQuery{} }
func (m *NetworkSearchQuery) String() string { return proto.CompactTextString(m) }
func (*NetworkSearchQuery) ProtoMessage()    {}
func (*NetworkSearchQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{3}
}

func (m *NetworkSearchQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSearchQuery.Unmarshal(m, b)
}
func (m *NetworkSearchQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSearchQuery.Marshal(b, m, deterministic)
}
func (m *NetworkSearchQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSearchQuery.Merge(m, src)
}
func (m *NetworkSearchQuery) XXX_Size() int {
	return xxx_messageInfo_NetworkSearchQuery.Size(m)
}
func (m *NetworkSearchQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSearchQuery.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSearchQuery proto.InternalMessageInfo

func (m *NetworkSearchQuery) GetID() *wrappers.StringValue {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *NetworkSearchQuery) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *NetworkSearchQuery) GetPartitionID() *wrappers.StringValue {
	if m != nil {
		return m.PartitionID
	}
	return nil
}

func (m *NetworkSearchQuery) GetProjectID() *wrappers.StringValue {
	if m != nil {
		return m.ProjectID
	}
	return nil
}

func (m *NetworkSearchQuery) GetPrefixes() []*wrappers.StringValue {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

func (m *NetworkSearchQuery) GetDestinationPrefixes() []*wrappers.StringValue {
	if m != nil {
		return m.DestinationPrefixes
	}
	return nil
}

func (m *NetworkSearchQuery) GetNat() *wrappers.BoolValue {
	if m != nil {
		return m.Nat
	}
	return nil
}

func (m *NetworkSearchQuery) GetPrivateSuper() *wrappers.BoolValue {
	if m != nil {
		return m.PrivateSuper
	}
	return nil
}

func (m *NetworkSearchQuery) GetUnderlay() *wrappers.BoolValue {
	if m != nil {
		return m.Underlay
	}
	return nil
}

func (m *NetworkSearchQuery) GetVrf() *wrappers.UInt64Value {
	if m != nil {
		return m.Vrf
	}
	return nil
}

func (m *NetworkSearchQuery) GetVrfShared() *wrappers.BoolValue {
	if m != nil {
		return m.VrfShared
	}
	return nil
}

func (m *NetworkSearchQuery) GetParentNetworkID() *wrappers.StringValue {
	if m != nil {
		return m.ParentNetworkID
	}
	return nil
}

func (m *NetworkSearchQuery) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type NetworkCreateRequest struct {
	Network              *Network          `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	NetworkImmutable     *NetworkImmutable `protobuf:"bytes,2,opt,name=networkImmutable,proto3" json:"networkImmutable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NetworkCreateRequest) Reset()         { *m = NetworkCreateRequest{} }
func (m *NetworkCreateRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkCreateRequest) ProtoMessage()    {}
func (*NetworkCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{4}
}

func (m *NetworkCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkCreateRequest.Unmarshal(m, b)
}
func (m *NetworkCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkCreateRequest.Marshal(b, m, deterministic)
}
func (m *NetworkCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkCreateRequest.Merge(m, src)
}
func (m *NetworkCreateRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkCreateRequest.Size(m)
}
func (m *NetworkCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkCreateRequest proto.InternalMessageInfo

func (m *NetworkCreateRequest) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *NetworkCreateRequest) GetNetworkImmutable() *NetworkImmutable {
	if m != nil {
		return m.NetworkImmutable
	}
	return nil
}

type NetworkUpdateRequest struct {
	Common               *Common  `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Prefixes             []string `protobuf:"bytes,2,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkUpdateRequest) Reset()         { *m = NetworkUpdateRequest{} }
func (m *NetworkUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkUpdateRequest) ProtoMessage()    {}
func (*NetworkUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{5}
}

func (m *NetworkUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkUpdateRequest.Unmarshal(m, b)
}
func (m *NetworkUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkUpdateRequest.Marshal(b, m, deterministic)
}
func (m *NetworkUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkUpdateRequest.Merge(m, src)
}
func (m *NetworkUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkUpdateRequest.Size(m)
}
func (m *NetworkUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkUpdateRequest proto.InternalMessageInfo

func (m *NetworkUpdateRequest) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *NetworkUpdateRequest) GetPrefixes() []string {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

type NetworkFindRequest struct {
	NetworkSearchQuery   *NetworkSearchQuery `protobuf:"bytes,1,opt,name=networkSearchQuery,proto3" json:"networkSearchQuery,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NetworkFindRequest) Reset()         { *m = NetworkFindRequest{} }
func (m *NetworkFindRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkFindRequest) ProtoMessage()    {}
func (*NetworkFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{6}
}

func (m *NetworkFindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkFindRequest.Unmarshal(m, b)
}
func (m *NetworkFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkFindRequest.Marshal(b, m, deterministic)
}
func (m *NetworkFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkFindRequest.Merge(m, src)
}
func (m *NetworkFindRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkFindRequest.Size(m)
}
func (m *NetworkFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkFindRequest proto.InternalMessageInfo

func (m *NetworkFindRequest) GetNetworkSearchQuery() *NetworkSearchQuery {
	if m != nil {
		return m.NetworkSearchQuery
	}
	return nil
}

type NetworkAllocateRequest struct {
	Network              *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkAllocateRequest) Reset()         { *m = NetworkAllocateRequest{} }
func (m *NetworkAllocateRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkAllocateRequest) ProtoMessage()    {}
func (*NetworkAllocateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{7}
}

func (m *NetworkAllocateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkAllocateRequest.Unmarshal(m, b)
}
func (m *NetworkAllocateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkAllocateRequest.Marshal(b, m, deterministic)
}
func (m *NetworkAllocateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkAllocateRequest.Merge(m, src)
}
func (m *NetworkAllocateRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkAllocateRequest.Size(m)
}
func (m *NetworkAllocateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkAllocateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkAllocateRequest proto.InternalMessageInfo

func (m *NetworkAllocateRequest) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type NetworkResponse struct {
	Network              *Network          `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	NetworkImmutable     *NetworkImmutable `protobuf:"bytes,2,opt,name=networkImmutable,proto3" json:"networkImmutable,omitempty"`
	Usage                *NetworkUsage     `protobuf:"bytes,3,opt,name=usage,proto3" json:"usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NetworkResponse) Reset()         { *m = NetworkResponse{} }
func (m *NetworkResponse) String() string { return proto.CompactTextString(m) }
func (*NetworkResponse) ProtoMessage()    {}
func (*NetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{8}
}

func (m *NetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkResponse.Unmarshal(m, b)
}
func (m *NetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkResponse.Marshal(b, m, deterministic)
}
func (m *NetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkResponse.Merge(m, src)
}
func (m *NetworkResponse) XXX_Size() int {
	return xxx_messageInfo_NetworkResponse.Size(m)
}
func (m *NetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkResponse proto.InternalMessageInfo

func (m *NetworkResponse) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *NetworkResponse) GetNetworkImmutable() *NetworkImmutable {
	if m != nil {
		return m.NetworkImmutable
	}
	return nil
}

func (m *NetworkResponse) GetUsage() *NetworkUsage {
	if m != nil {
		return m.Usage
	}
	return nil
}

type NetworkListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkListRequest) Reset()         { *m = NetworkListRequest{} }
func (m *NetworkListRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkListRequest) ProtoMessage()    {}
func (*NetworkListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{9}
}

func (m *NetworkListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkListRequest.Unmarshal(m, b)
}
func (m *NetworkListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkListRequest.Marshal(b, m, deterministic)
}
func (m *NetworkListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkListRequest.Merge(m, src)
}
func (m *NetworkListRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkListRequest.Size(m)
}
func (m *NetworkListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkListRequest proto.InternalMessageInfo

type NetworkListResponse struct {
	Networks             []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NetworkListResponse) Reset()         { *m = NetworkListResponse{} }
func (m *NetworkListResponse) String() string { return proto.CompactTextString(m) }
func (*NetworkListResponse) ProtoMessage()    {}
func (*NetworkListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ef602c4c85062d, []int{10}
}

func (m *NetworkListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkListResponse.Unmarshal(m, b)
}
func (m *NetworkListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkListResponse.Marshal(b, m, deterministic)
}
func (m *NetworkListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkListResponse.Merge(m, src)
}
func (m *NetworkListResponse) XXX_Size() int {
	return xxx_messageInfo_NetworkListResponse.Size(m)
}
func (m *NetworkListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkListResponse proto.InternalMessageInfo

func (m *NetworkListResponse) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

func init() {
	proto.RegisterType((*Network)(nil), "v1.Network")
	proto.RegisterMapType((map[string]string)(nil), "v1.Network.LabelsEntry")
	proto.RegisterType((*NetworkImmutable)(nil), "v1.NetworkImmutable")
	proto.RegisterType((*NetworkUsage)(nil), "v1.NetworkUsage")
	proto.RegisterType((*NetworkSearchQuery)(nil), "v1.NetworkSearchQuery")
	proto.RegisterMapType((map[string]string)(nil), "v1.NetworkSearchQuery.LabelsEntry")
	proto.RegisterType((*NetworkCreateRequest)(nil), "v1.NetworkCreateRequest")
	proto.RegisterType((*NetworkUpdateRequest)(nil), "v1.NetworkUpdateRequest")
	proto.RegisterType((*NetworkFindRequest)(nil), "v1.NetworkFindRequest")
	proto.RegisterType((*NetworkAllocateRequest)(nil), "v1.NetworkAllocateRequest")
	proto.RegisterType((*NetworkResponse)(nil), "v1.NetworkResponse")
	proto.RegisterType((*NetworkListRequest)(nil), "v1.NetworkListRequest")
	proto.RegisterType((*NetworkListResponse)(nil), "v1.NetworkListResponse")
}

func init() { proto.RegisterFile("v1/network.proto", fileDescriptor_77ef602c4c85062d) }

var fileDescriptor_77ef602c4c85062d = []byte{
	// 867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x51, 0x6f, 0xe3, 0x44,
	0x10, 0x56, 0x1c, 0xc7, 0x49, 0x26, 0x85, 0x86, 0x6d, 0x74, 0x58, 0x16, 0x42, 0x95, 0x25, 0xa0,
	0x0f, 0x3d, 0xfb, 0x52, 0xd0, 0xb5, 0x14, 0xa9, 0xc0, 0x5d, 0xa8, 0x14, 0xe9, 0x74, 0x3a, 0x1c,
	0xf5, 0x1e, 0x10, 0x2f, 0x9b, 0x64, 0x93, 0x9a, 0x38, 0xb6, 0x59, 0xaf, 0x7d, 0xe4, 0x89, 0x5f,
	0xc1, 0x2b, 0x0f, 0xfc, 0x03, 0x7e, 0x06, 0xff, 0x83, 0x1f, 0x82, 0x76, 0xbd, 0xf6, 0xad, 0x93,
	0xf4, 0x9a, 0xb6, 0xe8, 0xde, 0x76, 0x67, 0xbe, 0x6f, 0x67, 0x76, 0x76, 0xbe, 0xb1, 0xa1, 0x9b,
	0xf5, 0xdd, 0x90, 0xb0, 0x37, 0x11, 0x5d, 0x38, 0x31, 0x8d, 0x58, 0x84, 0xb4, 0xac, 0x6f, 0xed,
	0x67, 0x7d, 0x77, 0x12, 0x2d, 0x97, 0x51, 0x98, 0x1b, 0xad, 0x4f, 0xe7, 0x51, 0x34, 0x0f, 0x88,
	0x2b, 0x76, 0xe3, 0x74, 0xe6, 0xbe, 0xa1, 0x38, 0x8e, 0x09, 0x4d, 0x72, 0xbf, 0xfd, 0x87, 0x06,
	0xcd, 0x97, 0xf9, 0x31, 0xc8, 0x06, 0x23, 0xe7, 0x9a, 0xb5, 0xc3, 0xda, 0x51, 0xe7, 0x04, 0x9c,
	0xac, 0xef, 0x3c, 0x17, 0x16, 0x4f, 0x7a, 0xd0, 0x05, 0x74, 0x62, 0x4c, 0x99, 0xcf, 0xfc, 0x28,
	0x1c, 0x0e, 0x4c, 0x4d, 0x00, 0x3f, 0x71, 0xf2, 0x28, 0x4e, 0x11, 0xc5, 0x19, 0x31, 0xea, 0x87,
	0xf3, 0xd7, 0x38, 0x48, 0x89, 0xa7, 0x12, 0xd0, 0x39, 0xb4, 0x63, 0x1a, 0xfd, 0x42, 0x26, 0x6c,
	0x38, 0x30, 0xeb, 0x3b, 0xb0, 0xdf, 0xc2, 0x91, 0x0b, 0x46, 0x80, 0xc7, 0x24, 0x48, 0x4c, 0xfd,
	0xb0, 0x7e, 0xd4, 0x39, 0xf9, 0x98, 0xe7, 0x27, 0x93, 0x77, 0x5e, 0x08, 0xcf, 0x0f, 0x21, 0xa3,
	0x2b, 0x4f, 0xc2, 0xac, 0xaf, 0xa1, 0xa3, 0x98, 0x51, 0x17, 0xea, 0x0b, 0xb2, 0x12, 0x97, 0x6b,
	0x7b, 0x7c, 0x89, 0x7a, 0xd0, 0xc8, 0x78, 0x14, 0x71, 0x8f, 0xb6, 0x97, 0x6f, 0xce, 0xb5, 0xb3,
	0x9a, 0xfd, 0xaf, 0x06, 0x5d, 0x79, 0xf4, 0x70, 0xb9, 0x4c, 0x19, 0x1e, 0x07, 0x04, 0x59, 0xd0,
	0x8a, 0x29, 0x99, 0xf9, 0xbf, 0x91, 0xc4, 0xac, 0x1d, 0xd6, 0x8f, 0xda, 0x5e, 0xb9, 0x47, 0x4f,
	0xe0, 0x60, 0x4a, 0x12, 0xe6, 0x87, 0x98, 0xdf, 0xf4, 0x55, 0x01, 0xd3, 0x04, 0x6c, 0x9b, 0x8b,
	0xa7, 0x13, 0x62, 0x26, 0x8a, 0xd0, 0xf2, 0xf8, 0x12, 0xd9, 0xb0, 0x17, 0x53, 0x3f, 0xc3, 0x8c,
	0x8c, 0xd2, 0x98, 0x50, 0x53, 0x17, 0xae, 0x8a, 0x8d, 0xe7, 0x90, 0x86, 0x53, 0x42, 0x03, 0xbc,
	0x32, 0x1b, 0xc2, 0x5f, 0xee, 0x91, 0x03, 0xf5, 0x8c, 0xce, 0x4c, 0xe3, 0x86, 0xb2, 0x5e, 0x0d,
	0x43, 0xf6, 0xf4, 0xab, 0xbc, 0xac, 0x1c, 0x88, 0xce, 0xa0, 0x9d, 0xd1, 0xd9, 0xe8, 0x1a, 0x53,
	0x32, 0x35, 0x9b, 0x82, 0x65, 0x6d, 0xb0, 0x9e, 0x45, 0x51, 0x20, 0x9f, 0xa2, 0x04, 0xa3, 0x4b,
	0xd8, 0x8f, 0x31, 0x25, 0x21, 0x2b, 0x6a, 0x34, 0x30, 0x5b, 0x3b, 0x3c, 0xe6, 0x3a, 0xc9, 0xfe,
	0xb3, 0x06, 0x7b, 0x72, 0x77, 0x95, 0xe0, 0x39, 0xe1, 0x25, 0xc0, 0x19, 0xf6, 0x03, 0x5e, 0xef,
	0xe1, 0xab, 0x44, 0x3c, 0x96, 0xee, 0x55, 0x6c, 0xc8, 0x84, 0x66, 0x9a, 0x90, 0x29, 0x77, 0x6b,
	0xc2, 0x5d, 0x6c, 0xd1, 0x31, 0x7c, 0x54, 0x22, 0xcb, 0x27, 0xa8, 0x0b, 0xcc, 0xa6, 0x83, 0xc7,
	0xe2, 0xc4, 0x12, 0xa8, 0xe7, 0xb1, 0x54, 0x9b, 0xfd, 0x8f, 0x01, 0x48, 0x26, 0x38, 0x22, 0x98,
	0x4e, 0xae, 0x7f, 0x4c, 0x09, 0x5d, 0xa1, 0x63, 0xd0, 0x86, 0x03, 0x29, 0x93, 0x77, 0x5f, 0x59,
	0x1b, 0x0e, 0xd0, 0x13, 0xd0, 0x43, 0xbc, 0x24, 0x3b, 0xa9, 0x45, 0x20, 0xd7, 0x65, 0x56, 0x7f,
	0x90, 0xcc, 0xf4, 0xbb, 0xc9, 0xec, 0x4c, 0xe9, 0xf2, 0x86, 0x10, 0xda, 0xbb, 0xa9, 0x6f, 0x35,
	0xf0, 0x72, 0xbb, 0x06, 0x8c, 0x1d, 0x0e, 0xd9, 0xaa, 0x90, 0xe3, 0x5c, 0x21, 0xb7, 0x77, 0xa6,
	0x50, 0xcf, 0xc5, 0x9a, 0x7a, 0x5a, 0xb7, 0xd2, 0xaa, 0xca, 0x7a, 0xaa, 0x28, 0xab, 0x7d, 0x2b,
	0x77, 0x43, 0x75, 0x70, 0x2f, 0xd5, 0x75, 0x1e, 0xa8, 0xba, 0xbd, 0x7b, 0xa8, 0x0e, 0x9d, 0x97,
	0x83, 0xf4, 0x03, 0xf1, 0x34, 0xb6, 0x32, 0x48, 0x95, 0x2e, 0xff, 0xbf, 0x67, 0xea, 0xef, 0xd0,
	0x93, 0x41, 0x9e, 0x53, 0x82, 0x19, 0xf1, 0xc8, 0xaf, 0x29, 0x49, 0x18, 0xfa, 0x0c, 0x9a, 0xf2,
	0x4b, 0x26, 0x15, 0xd5, 0x51, 0xf2, 0xf1, 0x0a, 0x1f, 0xfa, 0x0e, 0xba, 0xe1, 0xda, 0x44, 0x96,
	0x8a, 0xea, 0x29, 0xf8, 0xd2, 0xe7, 0x6d, 0xa0, 0xed, 0xd7, 0x65, 0x02, 0x57, 0xf1, 0x54, 0x49,
	0x60, 0x97, 0x0f, 0x9f, 0x3a, 0xfb, 0xb5, 0xea, 0xec, 0xb7, 0x7f, 0x2e, 0x67, 0xc4, 0xa5, 0x1f,
	0x4e, 0x8b, 0x53, 0x2f, 0x01, 0x85, 0x1b, 0x35, 0x95, 0x11, 0x1e, 0x6d, 0xaf, 0xb8, 0xb7, 0x85,
	0x61, 0x7f, 0x0b, 0x8f, 0x24, 0xf2, 0xfb, 0x20, 0x88, 0x26, 0x77, 0x2e, 0x9c, 0xfd, 0x57, 0x0d,
	0xf6, 0x0b, 0x23, 0x49, 0xe2, 0x28, 0x4c, 0xc8, 0x7b, 0xab, 0x39, 0xfa, 0x1c, 0x1a, 0x29, 0x9f,
	0xec, 0x72, 0x86, 0x75, 0x15, 0x9a, 0x98, 0xf8, 0x5e, 0xee, 0xb6, 0x7b, 0x65, 0x0d, 0x5f, 0xf8,
	0x09, 0x93, 0x37, 0xb4, 0x2f, 0xe0, 0xa0, 0x62, 0x95, 0xd9, 0x7f, 0x01, 0x2d, 0x19, 0x28, 0xff,
	0x10, 0xaf, 0xa5, 0x5f, 0x3a, 0x4f, 0xfe, 0xd6, 0xe0, 0xc3, 0xb2, 0xcc, 0x34, 0xf3, 0x27, 0x04,
	0x9d, 0x82, 0x91, 0xb7, 0x1f, 0x32, 0x15, 0x4e, 0xa5, 0x23, 0xad, 0x03, 0xf5, 0xb4, 0x22, 0xe8,
	0x29, 0x18, 0x79, 0xdb, 0x54, 0x88, 0x95, 0x4e, 0xda, 0x4e, 0xfc, 0x06, 0x5a, 0xc5, 0xcb, 0x21,
	0x4b, 0x01, 0xac, 0x3d, 0xe7, 0x4d, 0x51, 0x75, 0xde, 0x54, 0x48, 0xed, 0x18, 0xa5, 0xcb, 0x2c,
	0xf5, 0x27, 0xa8, 0x52, 0xa3, 0x53, 0xd0, 0xf9, 0xbe, 0x42, 0x54, 0x4a, 0x7b, 0x23, 0xf1, 0x99,
	0xfb, 0xd3, 0xe3, 0xb9, 0xcf, 0xae, 0xd3, 0xb1, 0x33, 0x89, 0x96, 0xee, 0x92, 0x30, 0x1c, 0x3c,
	0x4e, 0x18, 0x9e, 0x2c, 0xe4, 0x1a, 0xc7, 0xbe, 0x1b, 0x2f, 0xe6, 0xf9, 0x2f, 0xa5, 0x9b, 0xf5,
	0xc7, 0x86, 0x58, 0x7d, 0xf9, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x68, 0x6d, 0x9f, 0x93,
	0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NetworkServiceClient is the client API for NetworkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkServiceClient interface {
	Create(ctx context.Context, in *NetworkCreateRequest, opts ...grpc.CallOption) (*NetworkResponse, error)
	Update(ctx context.Context, in *NetworkUpdateRequest, opts ...grpc.CallOption) (*NetworkResponse, error)
	//    rpc Delete(NetworkDeleteRequest) returns (NetworkResponse);
	//    rpc Get(NetworkGetRequest) returns (NetworkResponse);
	Allocate(ctx context.Context, in *NetworkAllocateRequest, opts ...grpc.CallOption) (*NetworkResponse, error)
	Find(ctx context.Context, in *NetworkFindRequest, opts ...grpc.CallOption) (*NetworkListResponse, error)
	List(ctx context.Context, in *NetworkListRequest, opts ...grpc.CallOption) (*NetworkListResponse, error)
}

type networkServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNetworkServiceClient(cc grpc.ClientConnInterface) NetworkServiceClient {
	return &networkServiceClient{cc}
}

func (c *networkServiceClient) Create(ctx context.Context, in *NetworkCreateRequest, opts ...grpc.CallOption) (*NetworkResponse, error) {
	out := new(NetworkResponse)
	err := c.cc.Invoke(ctx, "/v1.NetworkService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) Update(ctx context.Context, in *NetworkUpdateRequest, opts ...grpc.CallOption) (*NetworkResponse, error) {
	out := new(NetworkResponse)
	err := c.cc.Invoke(ctx, "/v1.NetworkService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) Allocate(ctx context.Context, in *NetworkAllocateRequest, opts ...grpc.CallOption) (*NetworkResponse, error) {
	out := new(NetworkResponse)
	err := c.cc.Invoke(ctx, "/v1.NetworkService/Allocate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) Find(ctx context.Context, in *NetworkFindRequest, opts ...grpc.CallOption) (*NetworkListResponse, error) {
	out := new(NetworkListResponse)
	err := c.cc.Invoke(ctx, "/v1.NetworkService/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) List(ctx context.Context, in *NetworkListRequest, opts ...grpc.CallOption) (*NetworkListResponse, error) {
	out := new(NetworkListResponse)
	err := c.cc.Invoke(ctx, "/v1.NetworkService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkServiceServer is the server API for NetworkService service.
type NetworkServiceServer interface {
	Create(context.Context, *NetworkCreateRequest) (*NetworkResponse, error)
	Update(context.Context, *NetworkUpdateRequest) (*NetworkResponse, error)
	//    rpc Delete(NetworkDeleteRequest) returns (NetworkResponse);
	//    rpc Get(NetworkGetRequest) returns (NetworkResponse);
	Allocate(context.Context, *NetworkAllocateRequest) (*NetworkResponse, error)
	Find(context.Context, *NetworkFindRequest) (*NetworkListResponse, error)
	List(context.Context, *NetworkListRequest) (*NetworkListResponse, error)
}

// UnimplementedNetworkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkServiceServer struct {
}

func (*UnimplementedNetworkServiceServer) Create(ctx context.Context, req *NetworkCreateRequest) (*NetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedNetworkServiceServer) Update(ctx context.Context, req *NetworkUpdateRequest) (*NetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedNetworkServiceServer) Allocate(ctx context.Context, req *NetworkAllocateRequest) (*NetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Allocate not implemented")
}
func (*UnimplementedNetworkServiceServer) Find(ctx context.Context, req *NetworkFindRequest) (*NetworkListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedNetworkServiceServer) List(ctx context.Context, req *NetworkListRequest) (*NetworkListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterNetworkServiceServer(s *grpc.Server, srv NetworkServiceServer) {
	s.RegisterService(&_NetworkService_serviceDesc, srv)
}

func _NetworkService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.NetworkService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).Create(ctx, req.(*NetworkCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.NetworkService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).Update(ctx, req.(*NetworkUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_Allocate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkAllocateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).Allocate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.NetworkService/Allocate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).Allocate(ctx, req.(*NetworkAllocateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkFindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.NetworkService/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).Find(ctx, req.(*NetworkFindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.NetworkService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).List(ctx, req.(*NetworkListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.NetworkService",
	HandlerType: (*NetworkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _NetworkService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _NetworkService_Update_Handler,
		},
		{
			MethodName: "Allocate",
			Handler:    _NetworkService_Allocate_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _NetworkService_Find_Handler,
		},
		{
			MethodName: "List",
			Handler:    _NetworkService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/network.proto",
}
