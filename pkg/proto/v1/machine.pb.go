// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/machine.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MachineState_State int32

const (
	MachineState_AVAILABLE MachineState_State = 0
	MachineState_RESERVED  MachineState_State = 1
	MachineState_LOCKED    MachineState_State = 2
)

var MachineState_State_name = map[int32]string{
	0: "AVAILABLE",
	1: "RESERVED",
	2: "LOCKED",
}

var MachineState_State_value = map[string]int32{
	"AVAILABLE": 0,
	"RESERVED":  1,
	"LOCKED":    2,
}

func (x MachineState_State) String() string {
	return proto.EnumName(MachineState_State_name, int32(x))
}

func (MachineState_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{7, 0}
}

type ChassisIdentifyLEDState_State int32

const (
	ChassisIdentifyLEDState_LED_OFF ChassisIdentifyLEDState_State = 0
	ChassisIdentifyLEDState_LED_ON  ChassisIdentifyLEDState_State = 1
)

var ChassisIdentifyLEDState_State_name = map[int32]string{
	0: "LED_OFF",
	1: "LED_ON",
}

var ChassisIdentifyLEDState_State_value = map[string]int32{
	"LED_OFF": 0,
	"LED_ON":  1,
}

func (x ChassisIdentifyLEDState_State) String() string {
	return proto.EnumName(ChassisIdentifyLEDState_State_name, int32(x))
}

func (ChassisIdentifyLEDState_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{8, 0}
}

type MachineSetup struct {
	PrimaryDisk          string   `protobuf:"bytes,1,opt,name=primaryDisk,proto3" json:"primaryDisk,omitempty"`
	OsPartition          string   `protobuf:"bytes,2,opt,name=osPartition,proto3" json:"osPartition,omitempty"`
	Initrd               string   `protobuf:"bytes,3,opt,name=initrd,proto3" json:"initrd,omitempty"`
	Cmdline              string   `protobuf:"bytes,4,opt,name=cmdline,proto3" json:"cmdline,omitempty"`
	Kernel               string   `protobuf:"bytes,5,opt,name=kernel,proto3" json:"kernel,omitempty"`
	BootloaderID         string   `protobuf:"bytes,6,opt,name=bootloaderID,proto3" json:"bootloaderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineSetup) Reset()         { *m = MachineSetup{} }
func (m *MachineSetup) String() string { return proto.CompactTextString(m) }
func (*MachineSetup) ProtoMessage()    {}
func (*MachineSetup) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{0}
}

func (m *MachineSetup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineSetup.Unmarshal(m, b)
}
func (m *MachineSetup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineSetup.Marshal(b, m, deterministic)
}
func (m *MachineSetup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineSetup.Merge(m, src)
}
func (m *MachineSetup) XXX_Size() int {
	return xxx_messageInfo_MachineSetup.Size(m)
}
func (m *MachineSetup) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineSetup.DiscardUnknown(m)
}

var xxx_messageInfo_MachineSetup proto.InternalMessageInfo

func (m *MachineSetup) GetPrimaryDisk() string {
	if m != nil {
		return m.PrimaryDisk
	}
	return ""
}

func (m *MachineSetup) GetOsPartition() string {
	if m != nil {
		return m.OsPartition
	}
	return ""
}

func (m *MachineSetup) GetInitrd() string {
	if m != nil {
		return m.Initrd
	}
	return ""
}

func (m *MachineSetup) GetCmdline() string {
	if m != nil {
		return m.Cmdline
	}
	return ""
}

func (m *MachineSetup) GetKernel() string {
	if m != nil {
		return m.Kernel
	}
	return ""
}

func (m *MachineSetup) GetBootloaderID() string {
	if m != nil {
		return m.BootloaderID
	}
	return ""
}

type MachineReinstall struct {
	OldImageID           string        `protobuf:"bytes,1,opt,name=oldImageID,proto3" json:"oldImageID,omitempty"`
	Setup                *MachineSetup `protobuf:"bytes,2,opt,name=setup,proto3" json:"setup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MachineReinstall) Reset()         { *m = MachineReinstall{} }
func (m *MachineReinstall) String() string { return proto.CompactTextString(m) }
func (*MachineReinstall) ProtoMessage()    {}
func (*MachineReinstall) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{1}
}

func (m *MachineReinstall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineReinstall.Unmarshal(m, b)
}
func (m *MachineReinstall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineReinstall.Marshal(b, m, deterministic)
}
func (m *MachineReinstall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineReinstall.Merge(m, src)
}
func (m *MachineReinstall) XXX_Size() int {
	return xxx_messageInfo_MachineReinstall.Size(m)
}
func (m *MachineReinstall) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineReinstall.DiscardUnknown(m)
}

var xxx_messageInfo_MachineReinstall proto.InternalMessageInfo

func (m *MachineReinstall) GetOldImageID() string {
	if m != nil {
		return m.OldImageID
	}
	return ""
}

func (m *MachineReinstall) GetSetup() *MachineSetup {
	if m != nil {
		return m.Setup
	}
	return nil
}

type MachineNetwork struct {
	NetworkID            string   `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Prefixes             []string `protobuf:"bytes,2,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	IPs                  []string `protobuf:"bytes,3,rep,name=IPs,proto3" json:"IPs,omitempty"`
	Vrf                  uint64   `protobuf:"varint,4,opt,name=vrf,proto3" json:"vrf,omitempty"`
	ASN                  int64    `protobuf:"varint,5,opt,name=ASN,proto3" json:"ASN,omitempty"`
	Private              bool     `protobuf:"varint,6,opt,name=private,proto3" json:"private,omitempty"`
	Nat                  bool     `protobuf:"varint,7,opt,name=nat,proto3" json:"nat,omitempty"`
	DestinationPrefixes  []string `protobuf:"bytes,8,rep,name=destinationPrefixes,proto3" json:"destinationPrefixes,omitempty"`
	Underlay             bool     `protobuf:"varint,9,opt,name=underlay,proto3" json:"underlay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineNetwork) Reset()         { *m = MachineNetwork{} }
func (m *MachineNetwork) String() string { return proto.CompactTextString(m) }
func (*MachineNetwork) ProtoMessage()    {}
func (*MachineNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{2}
}

func (m *MachineNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineNetwork.Unmarshal(m, b)
}
func (m *MachineNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineNetwork.Marshal(b, m, deterministic)
}
func (m *MachineNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineNetwork.Merge(m, src)
}
func (m *MachineNetwork) XXX_Size() int {
	return xxx_messageInfo_MachineNetwork.Size(m)
}
func (m *MachineNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_MachineNetwork proto.InternalMessageInfo

func (m *MachineNetwork) GetNetworkID() string {
	if m != nil {
		return m.NetworkID
	}
	return ""
}

func (m *MachineNetwork) GetPrefixes() []string {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

func (m *MachineNetwork) GetIPs() []string {
	if m != nil {
		return m.IPs
	}
	return nil
}

func (m *MachineNetwork) GetVrf() uint64 {
	if m != nil {
		return m.Vrf
	}
	return 0
}

func (m *MachineNetwork) GetASN() int64 {
	if m != nil {
		return m.ASN
	}
	return 0
}

func (m *MachineNetwork) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *MachineNetwork) GetNat() bool {
	if m != nil {
		return m.Nat
	}
	return false
}

func (m *MachineNetwork) GetDestinationPrefixes() []string {
	if m != nil {
		return m.DestinationPrefixes
	}
	return nil
}

func (m *MachineNetwork) GetUnderlay() bool {
	if m != nil {
		return m.Underlay
	}
	return false
}

type MachineAllocation struct {
	Created              *timestamp.Timestamp  `protobuf:"bytes,1,opt,name=Created,proto3" json:"Created,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ProjectID            string                `protobuf:"bytes,4,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ImageResponse        *ImageResponse        `protobuf:"bytes,5,opt,name=imageResponse,proto3" json:"imageResponse,omitempty"`
	MachineNetworks      []*MachineNetwork     `protobuf:"bytes,6,rep,name=machineNetworks,proto3" json:"machineNetworks,omitempty"`
	Hostname             string                `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`
	SshPubKeys           []string              `protobuf:"bytes,8,rep,name=sshPubKeys,proto3" json:"sshPubKeys,omitempty"`
	UserData             *wrappers.StringValue `protobuf:"bytes,9,opt,name=userData,proto3" json:"userData,omitempty"`
	ConsolePassword      *wrappers.StringValue `protobuf:"bytes,10,opt,name=consolePassword,proto3" json:"consolePassword,omitempty"`
	Succeeded            bool                  `protobuf:"varint,11,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	Reinstall            *MachineReinstall     `protobuf:"bytes,12,opt,name=reinstall,proto3" json:"reinstall,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MachineAllocation) Reset()         { *m = MachineAllocation{} }
func (m *MachineAllocation) String() string { return proto.CompactTextString(m) }
func (*MachineAllocation) ProtoMessage()    {}
func (*MachineAllocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{3}
}

func (m *MachineAllocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineAllocation.Unmarshal(m, b)
}
func (m *MachineAllocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineAllocation.Marshal(b, m, deterministic)
}
func (m *MachineAllocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineAllocation.Merge(m, src)
}
func (m *MachineAllocation) XXX_Size() int {
	return xxx_messageInfo_MachineAllocation.Size(m)
}
func (m *MachineAllocation) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineAllocation.DiscardUnknown(m)
}

var xxx_messageInfo_MachineAllocation proto.InternalMessageInfo

func (m *MachineAllocation) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *MachineAllocation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MachineAllocation) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *MachineAllocation) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *MachineAllocation) GetImageResponse() *ImageResponse {
	if m != nil {
		return m.ImageResponse
	}
	return nil
}

func (m *MachineAllocation) GetMachineNetworks() []*MachineNetwork {
	if m != nil {
		return m.MachineNetworks
	}
	return nil
}

func (m *MachineAllocation) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *MachineAllocation) GetSshPubKeys() []string {
	if m != nil {
		return m.SshPubKeys
	}
	return nil
}

func (m *MachineAllocation) GetUserData() *wrappers.StringValue {
	if m != nil {
		return m.UserData
	}
	return nil
}

func (m *MachineAllocation) GetConsolePassword() *wrappers.StringValue {
	if m != nil {
		return m.ConsolePassword
	}
	return nil
}

func (m *MachineAllocation) GetSucceeded() bool {
	if m != nil {
		return m.Succeeded
	}
	return false
}

func (m *MachineAllocation) GetReinstall() *MachineReinstall {
	if m != nil {
		return m.Reinstall
	}
	return nil
}

type MachineHardwareBase struct {
	Memory               uint64                `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	CpuCores             uint32                `protobuf:"varint,2,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	Disks                []*MachineBlockDevice `protobuf:"bytes,3,rep,name=disks,proto3" json:"disks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MachineHardwareBase) Reset()         { *m = MachineHardwareBase{} }
func (m *MachineHardwareBase) String() string { return proto.CompactTextString(m) }
func (*MachineHardwareBase) ProtoMessage()    {}
func (*MachineHardwareBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{4}
}

func (m *MachineHardwareBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineHardwareBase.Unmarshal(m, b)
}
func (m *MachineHardwareBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineHardwareBase.Marshal(b, m, deterministic)
}
func (m *MachineHardwareBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineHardwareBase.Merge(m, src)
}
func (m *MachineHardwareBase) XXX_Size() int {
	return xxx_messageInfo_MachineHardwareBase.Size(m)
}
func (m *MachineHardwareBase) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineHardwareBase.DiscardUnknown(m)
}

var xxx_messageInfo_MachineHardwareBase proto.InternalMessageInfo

func (m *MachineHardwareBase) GetMemory() uint64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *MachineHardwareBase) GetCpuCores() uint32 {
	if m != nil {
		return m.CpuCores
	}
	return 0
}

func (m *MachineHardwareBase) GetDisks() []*MachineBlockDevice {
	if m != nil {
		return m.Disks
	}
	return nil
}

type MachineHardware struct {
	Base                 *MachineHardwareBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Nics                 []*MachineNic        `protobuf:"bytes,2,rep,name=nics,proto3" json:"nics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MachineHardware) Reset()         { *m = MachineHardware{} }
func (m *MachineHardware) String() string { return proto.CompactTextString(m) }
func (*MachineHardware) ProtoMessage()    {}
func (*MachineHardware) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{5}
}

func (m *MachineHardware) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineHardware.Unmarshal(m, b)
}
func (m *MachineHardware) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineHardware.Marshal(b, m, deterministic)
}
func (m *MachineHardware) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineHardware.Merge(m, src)
}
func (m *MachineHardware) XXX_Size() int {
	return xxx_messageInfo_MachineHardware.Size(m)
}
func (m *MachineHardware) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineHardware.DiscardUnknown(m)
}

var xxx_messageInfo_MachineHardware proto.InternalMessageInfo

func (m *MachineHardware) GetBase() *MachineHardwareBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *MachineHardware) GetNics() []*MachineNic {
	if m != nil {
		return m.Nics
	}
	return nil
}

type MachineHardwareExtended struct {
	Base                 *MachineHardwareBase  `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Nics                 []*MachineNicExtended `protobuf:"bytes,2,rep,name=nics,proto3" json:"nics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MachineHardwareExtended) Reset()         { *m = MachineHardwareExtended{} }
func (m *MachineHardwareExtended) String() string { return proto.CompactTextString(m) }
func (*MachineHardwareExtended) ProtoMessage()    {}
func (*MachineHardwareExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{6}
}

func (m *MachineHardwareExtended) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineHardwareExtended.Unmarshal(m, b)
}
func (m *MachineHardwareExtended) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineHardwareExtended.Marshal(b, m, deterministic)
}
func (m *MachineHardwareExtended) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineHardwareExtended.Merge(m, src)
}
func (m *MachineHardwareExtended) XXX_Size() int {
	return xxx_messageInfo_MachineHardwareExtended.Size(m)
}
func (m *MachineHardwareExtended) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineHardwareExtended.DiscardUnknown(m)
}

var xxx_messageInfo_MachineHardwareExtended proto.InternalMessageInfo

func (m *MachineHardwareExtended) GetBase() *MachineHardwareBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *MachineHardwareExtended) GetNics() []*MachineNicExtended {
	if m != nil {
		return m.Nics
	}
	return nil
}

type MachineState struct {
	Value                MachineState_State `protobuf:"varint,1,opt,name=value,proto3,enum=v1.MachineState_State" json:"value,omitempty"`
	Description          string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MachineState) Reset()         { *m = MachineState{} }
func (m *MachineState) String() string { return proto.CompactTextString(m) }
func (*MachineState) ProtoMessage()    {}
func (*MachineState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{7}
}

func (m *MachineState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineState.Unmarshal(m, b)
}
func (m *MachineState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineState.Marshal(b, m, deterministic)
}
func (m *MachineState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineState.Merge(m, src)
}
func (m *MachineState) XXX_Size() int {
	return xxx_messageInfo_MachineState.Size(m)
}
func (m *MachineState) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineState.DiscardUnknown(m)
}

var xxx_messageInfo_MachineState proto.InternalMessageInfo

func (m *MachineState) GetValue() MachineState_State {
	if m != nil {
		return m.Value
	}
	return MachineState_AVAILABLE
}

func (m *MachineState) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ChassisIdentifyLEDState struct {
	Value                ChassisIdentifyLEDState_State `protobuf:"varint,1,opt,name=value,proto3,enum=v1.ChassisIdentifyLEDState_State" json:"value,omitempty"`
	Description          string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ChassisIdentifyLEDState) Reset()         { *m = ChassisIdentifyLEDState{} }
func (m *ChassisIdentifyLEDState) String() string { return proto.CompactTextString(m) }
func (*ChassisIdentifyLEDState) ProtoMessage()    {}
func (*ChassisIdentifyLEDState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{8}
}

func (m *ChassisIdentifyLEDState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChassisIdentifyLEDState.Unmarshal(m, b)
}
func (m *ChassisIdentifyLEDState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChassisIdentifyLEDState.Marshal(b, m, deterministic)
}
func (m *ChassisIdentifyLEDState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChassisIdentifyLEDState.Merge(m, src)
}
func (m *ChassisIdentifyLEDState) XXX_Size() int {
	return xxx_messageInfo_ChassisIdentifyLEDState.Size(m)
}
func (m *ChassisIdentifyLEDState) XXX_DiscardUnknown() {
	xxx_messageInfo_ChassisIdentifyLEDState.DiscardUnknown(m)
}

var xxx_messageInfo_ChassisIdentifyLEDState proto.InternalMessageInfo

func (m *ChassisIdentifyLEDState) GetValue() ChassisIdentifyLEDState_State {
	if m != nil {
		return m.Value
	}
	return ChassisIdentifyLEDState_LED_OFF
}

func (m *ChassisIdentifyLEDState) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MachineBlockDevice struct {
	Name                 string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size                 uint64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Primary              bool                    `protobuf:"varint,3,opt,name=primary,proto3" json:"primary,omitempty"`
	Partitions           []*MachineDiskPartition `protobuf:"bytes,4,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MachineBlockDevice) Reset()         { *m = MachineBlockDevice{} }
func (m *MachineBlockDevice) String() string { return proto.CompactTextString(m) }
func (*MachineBlockDevice) ProtoMessage()    {}
func (*MachineBlockDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{9}
}

func (m *MachineBlockDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineBlockDevice.Unmarshal(m, b)
}
func (m *MachineBlockDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineBlockDevice.Marshal(b, m, deterministic)
}
func (m *MachineBlockDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineBlockDevice.Merge(m, src)
}
func (m *MachineBlockDevice) XXX_Size() int {
	return xxx_messageInfo_MachineBlockDevice.Size(m)
}
func (m *MachineBlockDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineBlockDevice.DiscardUnknown(m)
}

var xxx_messageInfo_MachineBlockDevice proto.InternalMessageInfo

func (m *MachineBlockDevice) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MachineBlockDevice) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MachineBlockDevice) GetPrimary() bool {
	if m != nil {
		return m.Primary
	}
	return false
}

func (m *MachineBlockDevice) GetPartitions() []*MachineDiskPartition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

type MachineRecentProvisioningEvents struct {
	Events                       []*MachineProvisioningEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	LastEventTime                *timestamp.Timestamp        `protobuf:"bytes,2,opt,name=lastEventTime,proto3" json:"lastEventTime,omitempty"`
	IncompleteProvisioningCycles string                      `protobuf:"bytes,3,opt,name=incompleteProvisioningCycles,proto3" json:"incompleteProvisioningCycles,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                    `json:"-"`
	XXX_unrecognized             []byte                      `json:"-"`
	XXX_sizecache                int32                       `json:"-"`
}

func (m *MachineRecentProvisioningEvents) Reset()         { *m = MachineRecentProvisioningEvents{} }
func (m *MachineRecentProvisioningEvents) String() string { return proto.CompactTextString(m) }
func (*MachineRecentProvisioningEvents) ProtoMessage()    {}
func (*MachineRecentProvisioningEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{10}
}

func (m *MachineRecentProvisioningEvents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineRecentProvisioningEvents.Unmarshal(m, b)
}
func (m *MachineRecentProvisioningEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineRecentProvisioningEvents.Marshal(b, m, deterministic)
}
func (m *MachineRecentProvisioningEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineRecentProvisioningEvents.Merge(m, src)
}
func (m *MachineRecentProvisioningEvents) XXX_Size() int {
	return xxx_messageInfo_MachineRecentProvisioningEvents.Size(m)
}
func (m *MachineRecentProvisioningEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineRecentProvisioningEvents.DiscardUnknown(m)
}

var xxx_messageInfo_MachineRecentProvisioningEvents proto.InternalMessageInfo

func (m *MachineRecentProvisioningEvents) GetEvents() []*MachineProvisioningEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *MachineRecentProvisioningEvents) GetLastEventTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastEventTime
	}
	return nil
}

func (m *MachineRecentProvisioningEvents) GetIncompleteProvisioningCycles() string {
	if m != nil {
		return m.IncompleteProvisioningCycles
	}
	return ""
}

type MachineProvisioningEvent struct {
	Time                 *timestamp.Timestamp  `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Event                string                `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Message              *wrappers.StringValue `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MachineProvisioningEvent) Reset()         { *m = MachineProvisioningEvent{} }
func (m *MachineProvisioningEvent) String() string { return proto.CompactTextString(m) }
func (*MachineProvisioningEvent) ProtoMessage()    {}
func (*MachineProvisioningEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{11}
}

func (m *MachineProvisioningEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineProvisioningEvent.Unmarshal(m, b)
}
func (m *MachineProvisioningEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineProvisioningEvent.Marshal(b, m, deterministic)
}
func (m *MachineProvisioningEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineProvisioningEvent.Merge(m, src)
}
func (m *MachineProvisioningEvent) XXX_Size() int {
	return xxx_messageInfo_MachineProvisioningEvent.Size(m)
}
func (m *MachineProvisioningEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineProvisioningEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MachineProvisioningEvent proto.InternalMessageInfo

func (m *MachineProvisioningEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *MachineProvisioningEvent) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *MachineProvisioningEvent) GetMessage() *wrappers.StringValue {
	if m != nil {
		return m.Message
	}
	return nil
}

type MachineLivelinessReport struct {
	AliveCount           uint32   `protobuf:"varint,1,opt,name=aliveCount,proto3" json:"aliveCount,omitempty"`
	DeadCount            uint32   `protobuf:"varint,2,opt,name=deadCount,proto3" json:"deadCount,omitempty"`
	UnknownCount         uint32   `protobuf:"varint,3,opt,name=unknownCount,proto3" json:"unknownCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineLivelinessReport) Reset()         { *m = MachineLivelinessReport{} }
func (m *MachineLivelinessReport) String() string { return proto.CompactTextString(m) }
func (*MachineLivelinessReport) ProtoMessage()    {}
func (*MachineLivelinessReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{12}
}

func (m *MachineLivelinessReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineLivelinessReport.Unmarshal(m, b)
}
func (m *MachineLivelinessReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineLivelinessReport.Marshal(b, m, deterministic)
}
func (m *MachineLivelinessReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineLivelinessReport.Merge(m, src)
}
func (m *MachineLivelinessReport) XXX_Size() int {
	return xxx_messageInfo_MachineLivelinessReport.Size(m)
}
func (m *MachineLivelinessReport) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineLivelinessReport.DiscardUnknown(m)
}

var xxx_messageInfo_MachineLivelinessReport proto.InternalMessageInfo

func (m *MachineLivelinessReport) GetAliveCount() uint32 {
	if m != nil {
		return m.AliveCount
	}
	return 0
}

func (m *MachineLivelinessReport) GetDeadCount() uint32 {
	if m != nil {
		return m.DeadCount
	}
	return 0
}

func (m *MachineLivelinessReport) GetUnknownCount() uint32 {
	if m != nil {
		return m.UnknownCount
	}
	return 0
}

// The bios version
type MachineBIOS struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Vendor               string   `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Date                 string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineBIOS) Reset()         { *m = MachineBIOS{} }
func (m *MachineBIOS) String() string { return proto.CompactTextString(m) }
func (*MachineBIOS) ProtoMessage()    {}
func (*MachineBIOS) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{13}
}

func (m *MachineBIOS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineBIOS.Unmarshal(m, b)
}
func (m *MachineBIOS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineBIOS.Marshal(b, m, deterministic)
}
func (m *MachineBIOS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineBIOS.Merge(m, src)
}
func (m *MachineBIOS) XXX_Size() int {
	return xxx_messageInfo_MachineBIOS.Size(m)
}
func (m *MachineBIOS) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineBIOS.DiscardUnknown(m)
}

var xxx_messageInfo_MachineBIOS proto.InternalMessageInfo

func (m *MachineBIOS) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MachineBIOS) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *MachineBIOS) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

// The IPMI connection data
type MachineIPMI struct {
	Address              string      `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	MacAddress           string      `protobuf:"bytes,2,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	User                 string      `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Password             string      `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Interface            string      `protobuf:"bytes,5,opt,name=interface,proto3" json:"interface,omitempty"`
	Fru                  *MachineFru `protobuf:"bytes,6,opt,name=fru,proto3" json:"fru,omitempty"`
	BmcVersion           string      `protobuf:"bytes,7,opt,name=bmcVersion,proto3" json:"bmcVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MachineIPMI) Reset()         { *m = MachineIPMI{} }
func (m *MachineIPMI) String() string { return proto.CompactTextString(m) }
func (*MachineIPMI) ProtoMessage()    {}
func (*MachineIPMI) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{14}
}

func (m *MachineIPMI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineIPMI.Unmarshal(m, b)
}
func (m *MachineIPMI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineIPMI.Marshal(b, m, deterministic)
}
func (m *MachineIPMI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineIPMI.Merge(m, src)
}
func (m *MachineIPMI) XXX_Size() int {
	return xxx_messageInfo_MachineIPMI.Size(m)
}
func (m *MachineIPMI) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineIPMI.DiscardUnknown(m)
}

var xxx_messageInfo_MachineIPMI proto.InternalMessageInfo

func (m *MachineIPMI) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MachineIPMI) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *MachineIPMI) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *MachineIPMI) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *MachineIPMI) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *MachineIPMI) GetFru() *MachineFru {
	if m != nil {
		return m.Fru
	}
	return nil
}

func (m *MachineIPMI) GetBmcVersion() string {
	if m != nil {
		return m.BmcVersion
	}
	return ""
}

// The Field Replaceable Unit data
type MachineFru struct {
	ChassisPartNumber    *wrappers.StringValue `protobuf:"bytes,1,opt,name=chassisPartNumber,proto3" json:"chassisPartNumber,omitempty"`
	ChassisPartSerial    *wrappers.StringValue `protobuf:"bytes,2,opt,name=chassisPartSerial,proto3" json:"chassisPartSerial,omitempty"`
	BoardMfg             *wrappers.StringValue `protobuf:"bytes,3,opt,name=boardMfg,proto3" json:"boardMfg,omitempty"`
	BoardMfgSerial       *wrappers.StringValue `protobuf:"bytes,4,opt,name=boardMfgSerial,proto3" json:"boardMfgSerial,omitempty"`
	BoardPartNumber      *wrappers.StringValue `protobuf:"bytes,5,opt,name=boardPartNumber,proto3" json:"boardPartNumber,omitempty"`
	ProductManufacturer  *wrappers.StringValue `protobuf:"bytes,6,opt,name=productManufacturer,proto3" json:"productManufacturer,omitempty"`
	ProductPartNumber    *wrappers.StringValue `protobuf:"bytes,7,opt,name=productPartNumber,proto3" json:"productPartNumber,omitempty"`
	ProductSerial        *wrappers.StringValue `protobuf:"bytes,8,opt,name=productSerial,proto3" json:"productSerial,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MachineFru) Reset()         { *m = MachineFru{} }
func (m *MachineFru) String() string { return proto.CompactTextString(m) }
func (*MachineFru) ProtoMessage()    {}
func (*MachineFru) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{15}
}

func (m *MachineFru) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineFru.Unmarshal(m, b)
}
func (m *MachineFru) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineFru.Marshal(b, m, deterministic)
}
func (m *MachineFru) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineFru.Merge(m, src)
}
func (m *MachineFru) XXX_Size() int {
	return xxx_messageInfo_MachineFru.Size(m)
}
func (m *MachineFru) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineFru.DiscardUnknown(m)
}

var xxx_messageInfo_MachineFru proto.InternalMessageInfo

func (m *MachineFru) GetChassisPartNumber() *wrappers.StringValue {
	if m != nil {
		return m.ChassisPartNumber
	}
	return nil
}

func (m *MachineFru) GetChassisPartSerial() *wrappers.StringValue {
	if m != nil {
		return m.ChassisPartSerial
	}
	return nil
}

func (m *MachineFru) GetBoardMfg() *wrappers.StringValue {
	if m != nil {
		return m.BoardMfg
	}
	return nil
}

func (m *MachineFru) GetBoardMfgSerial() *wrappers.StringValue {
	if m != nil {
		return m.BoardMfgSerial
	}
	return nil
}

func (m *MachineFru) GetBoardPartNumber() *wrappers.StringValue {
	if m != nil {
		return m.BoardPartNumber
	}
	return nil
}

func (m *MachineFru) GetProductManufacturer() *wrappers.StringValue {
	if m != nil {
		return m.ProductManufacturer
	}
	return nil
}

func (m *MachineFru) GetProductPartNumber() *wrappers.StringValue {
	if m != nil {
		return m.ProductPartNumber
	}
	return nil
}

func (m *MachineFru) GetProductSerial() *wrappers.StringValue {
	if m != nil {
		return m.ProductSerial
	}
	return nil
}

type MachineRegisterRequest struct {
	UUID                 string                   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	PartitionID          string                   `protobuf:"bytes,2,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	RackID               string                   `protobuf:"bytes,3,opt,name=rackID,proto3" json:"rackID,omitempty"`
	Hardware             *MachineHardwareExtended `protobuf:"bytes,4,opt,name=hardware,proto3" json:"hardware,omitempty"`
	BIOS                 *MachineBIOS             `protobuf:"bytes,5,opt,name=BIOS,proto3" json:"BIOS,omitempty"`
	IPMI                 *MachineIPMI             `protobuf:"bytes,6,opt,name=IPMI,proto3" json:"IPMI,omitempty"`
	Tags                 []*wrappers.StringValue  `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MachineRegisterRequest) Reset()         { *m = MachineRegisterRequest{} }
func (m *MachineRegisterRequest) String() string { return proto.CompactTextString(m) }
func (*MachineRegisterRequest) ProtoMessage()    {}
func (*MachineRegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{16}
}

func (m *MachineRegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineRegisterRequest.Unmarshal(m, b)
}
func (m *MachineRegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineRegisterRequest.Marshal(b, m, deterministic)
}
func (m *MachineRegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineRegisterRequest.Merge(m, src)
}
func (m *MachineRegisterRequest) XXX_Size() int {
	return xxx_messageInfo_MachineRegisterRequest.Size(m)
}
func (m *MachineRegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineRegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineRegisterRequest proto.InternalMessageInfo

func (m *MachineRegisterRequest) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *MachineRegisterRequest) GetPartitionID() string {
	if m != nil {
		return m.PartitionID
	}
	return ""
}

func (m *MachineRegisterRequest) GetRackID() string {
	if m != nil {
		return m.RackID
	}
	return ""
}

func (m *MachineRegisterRequest) GetHardware() *MachineHardwareExtended {
	if m != nil {
		return m.Hardware
	}
	return nil
}

func (m *MachineRegisterRequest) GetBIOS() *MachineBIOS {
	if m != nil {
		return m.BIOS
	}
	return nil
}

func (m *MachineRegisterRequest) GetIPMI() *MachineIPMI {
	if m != nil {
		return m.IPMI
	}
	return nil
}

func (m *MachineRegisterRequest) GetTags() []*wrappers.StringValue {
	if m != nil {
		return m.Tags
	}
	return nil
}

type MachineAllocateRequest struct {
	Common               *Common                     `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	UUID                 *wrappers.StringValue       `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Hostname             *wrappers.StringValue       `protobuf:"bytes,3,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	ProjectID            string                      `protobuf:"bytes,4,opt,name=projectID,proto3" json:"projectID,omitempty"`
	PartitionID          string                      `protobuf:"bytes,5,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	SizeID               string                      `protobuf:"bytes,6,opt,name=sizeID,proto3" json:"sizeID,omitempty"`
	ImageID              string                      `protobuf:"bytes,7,opt,name=imageID,proto3" json:"imageID,omitempty"`
	UserData             *wrappers.StringValue       `protobuf:"bytes,8,opt,name=UserData,proto3" json:"UserData,omitempty"`
	Tags                 []*wrappers.StringValue     `protobuf:"bytes,9,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Networks             []*MachineAllocationNetwork `protobuf:"bytes,10,rep,name=networks,proto3" json:"networks,omitempty"`
	IPs                  []*wrappers.StringValue     `protobuf:"bytes,11,rep,name=IPs,proto3" json:"IPs,omitempty"`
	SSHPubKeys           []*wrappers.StringValue     `protobuf:"bytes,99,rep,name=SSHPubKeys,proto3" json:"SSHPubKeys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MachineAllocateRequest) Reset()         { *m = MachineAllocateRequest{} }
func (m *MachineAllocateRequest) String() string { return proto.CompactTextString(m) }
func (*MachineAllocateRequest) ProtoMessage()    {}
func (*MachineAllocateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{17}
}

func (m *MachineAllocateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineAllocateRequest.Unmarshal(m, b)
}
func (m *MachineAllocateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineAllocateRequest.Marshal(b, m, deterministic)
}
func (m *MachineAllocateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineAllocateRequest.Merge(m, src)
}
func (m *MachineAllocateRequest) XXX_Size() int {
	return xxx_messageInfo_MachineAllocateRequest.Size(m)
}
func (m *MachineAllocateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineAllocateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineAllocateRequest proto.InternalMessageInfo

func (m *MachineAllocateRequest) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *MachineAllocateRequest) GetUUID() *wrappers.StringValue {
	if m != nil {
		return m.UUID
	}
	return nil
}

func (m *MachineAllocateRequest) GetHostname() *wrappers.StringValue {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *MachineAllocateRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *MachineAllocateRequest) GetPartitionID() string {
	if m != nil {
		return m.PartitionID
	}
	return ""
}

func (m *MachineAllocateRequest) GetSizeID() string {
	if m != nil {
		return m.SizeID
	}
	return ""
}

func (m *MachineAllocateRequest) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

func (m *MachineAllocateRequest) GetUserData() *wrappers.StringValue {
	if m != nil {
		return m.UserData
	}
	return nil
}

func (m *MachineAllocateRequest) GetTags() []*wrappers.StringValue {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MachineAllocateRequest) GetNetworks() []*MachineAllocationNetwork {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *MachineAllocateRequest) GetIPs() []*wrappers.StringValue {
	if m != nil {
		return m.IPs
	}
	return nil
}

func (m *MachineAllocateRequest) GetSSHPubKeys() []*wrappers.StringValue {
	if m != nil {
		return m.SSHPubKeys
	}
	return nil
}

type MachineAllocationNetwork struct {
	NetworkID            string              `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	AutoAcquireIP        *wrappers.BoolValue `protobuf:"bytes,2,opt,name=autoAcquireIP,proto3" json:"autoAcquireIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MachineAllocationNetwork) Reset()         { *m = MachineAllocationNetwork{} }
func (m *MachineAllocationNetwork) String() string { return proto.CompactTextString(m) }
func (*MachineAllocationNetwork) ProtoMessage()    {}
func (*MachineAllocationNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{18}
}

func (m *MachineAllocationNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineAllocationNetwork.Unmarshal(m, b)
}
func (m *MachineAllocationNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineAllocationNetwork.Marshal(b, m, deterministic)
}
func (m *MachineAllocationNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineAllocationNetwork.Merge(m, src)
}
func (m *MachineAllocationNetwork) XXX_Size() int {
	return xxx_messageInfo_MachineAllocationNetwork.Size(m)
}
func (m *MachineAllocationNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineAllocationNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_MachineAllocationNetwork proto.InternalMessageInfo

func (m *MachineAllocationNetwork) GetNetworkID() string {
	if m != nil {
		return m.NetworkID
	}
	return ""
}

func (m *MachineAllocationNetwork) GetAutoAcquireIP() *wrappers.BoolValue {
	if m != nil {
		return m.AutoAcquireIP
	}
	return nil
}

type MachineDiskPartition struct {
	Label                string            `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Device               string            `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	Number               uint32            `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	MountPoint           string            `protobuf:"bytes,4,opt,name=mountPoint,proto3" json:"mountPoint,omitempty"`
	MountOptions         []string          `protobuf:"bytes,5,rep,name=mountOptions,proto3" json:"mountOptions,omitempty"`
	Size                 uint64            `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Filesystem           string            `protobuf:"bytes,7,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	GptType              string            `protobuf:"bytes,8,opt,name=gptType,proto3" json:"gptType,omitempty"`
	GptGuid              string            `protobuf:"bytes,9,opt,name=gptGuid,proto3" json:"gptGuid,omitempty"`
	Properties           map[string]string `protobuf:"bytes,10,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ContainsOS           bool              `protobuf:"varint,11,opt,name=containsOS,proto3" json:"containsOS,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MachineDiskPartition) Reset()         { *m = MachineDiskPartition{} }
func (m *MachineDiskPartition) String() string { return proto.CompactTextString(m) }
func (*MachineDiskPartition) ProtoMessage()    {}
func (*MachineDiskPartition) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{19}
}

func (m *MachineDiskPartition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineDiskPartition.Unmarshal(m, b)
}
func (m *MachineDiskPartition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineDiskPartition.Marshal(b, m, deterministic)
}
func (m *MachineDiskPartition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineDiskPartition.Merge(m, src)
}
func (m *MachineDiskPartition) XXX_Size() int {
	return xxx_messageInfo_MachineDiskPartition.Size(m)
}
func (m *MachineDiskPartition) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineDiskPartition.DiscardUnknown(m)
}

var xxx_messageInfo_MachineDiskPartition proto.InternalMessageInfo

func (m *MachineDiskPartition) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MachineDiskPartition) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *MachineDiskPartition) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *MachineDiskPartition) GetMountPoint() string {
	if m != nil {
		return m.MountPoint
	}
	return ""
}

func (m *MachineDiskPartition) GetMountOptions() []string {
	if m != nil {
		return m.MountOptions
	}
	return nil
}

func (m *MachineDiskPartition) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MachineDiskPartition) GetFilesystem() string {
	if m != nil {
		return m.Filesystem
	}
	return ""
}

func (m *MachineDiskPartition) GetGptType() string {
	if m != nil {
		return m.GptType
	}
	return ""
}

func (m *MachineDiskPartition) GetGptGuid() string {
	if m != nil {
		return m.GptGuid
	}
	return ""
}

func (m *MachineDiskPartition) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *MachineDiskPartition) GetContainsOS() bool {
	if m != nil {
		return m.ContainsOS
	}
	return false
}

type MachineFinalizeAllocationRequest struct {
	ConsolePassword      string        `protobuf:"bytes,1,opt,name=ConsolePassword,proto3" json:"ConsolePassword,omitempty"`
	Setup                *MachineSetup `protobuf:"bytes,2,opt,name=setup,proto3" json:"setup,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MachineFinalizeAllocationRequest) Reset()         { *m = MachineFinalizeAllocationRequest{} }
func (m *MachineFinalizeAllocationRequest) String() string { return proto.CompactTextString(m) }
func (*MachineFinalizeAllocationRequest) ProtoMessage()    {}
func (*MachineFinalizeAllocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{20}
}

func (m *MachineFinalizeAllocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineFinalizeAllocationRequest.Unmarshal(m, b)
}
func (m *MachineFinalizeAllocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineFinalizeAllocationRequest.Marshal(b, m, deterministic)
}
func (m *MachineFinalizeAllocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineFinalizeAllocationRequest.Merge(m, src)
}
func (m *MachineFinalizeAllocationRequest) XXX_Size() int {
	return xxx_messageInfo_MachineFinalizeAllocationRequest.Size(m)
}
func (m *MachineFinalizeAllocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineFinalizeAllocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineFinalizeAllocationRequest proto.InternalMessageInfo

func (m *MachineFinalizeAllocationRequest) GetConsolePassword() string {
	if m != nil {
		return m.ConsolePassword
	}
	return ""
}

func (m *MachineFinalizeAllocationRequest) GetSetup() *MachineSetup {
	if m != nil {
		return m.Setup
	}
	return nil
}

// MachineSearchQuery can be used to search machines.
type MachineSearchQuery struct {
	ID          *wrappers.StringValue   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        *wrappers.StringValue   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PartitionID *wrappers.StringValue   `protobuf:"bytes,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	SizeID      *wrappers.StringValue   `protobuf:"bytes,4,opt,name=sizeID,proto3" json:"sizeID,omitempty"`
	RackID      *wrappers.StringValue   `protobuf:"bytes,5,opt,name=rackID,proto3" json:"rackID,omitempty"`
	Liveliness  *wrappers.StringValue   `protobuf:"bytes,6,opt,name=liveliness,proto3" json:"liveliness,omitempty"`
	Tags        []*wrappers.StringValue `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	// allocation
	AllocationName      *wrappers.StringValue `protobuf:"bytes,12,opt,name=allocationName,proto3" json:"allocationName,omitempty"`
	AllocationProject   *wrappers.StringValue `protobuf:"bytes,13,opt,name=allocationProject,proto3" json:"allocationProject,omitempty"`
	AllocationImageID   *wrappers.StringValue `protobuf:"bytes,14,opt,name=allocationImageID,proto3" json:"allocationImageID,omitempty"`
	AllocationHostname  *wrappers.StringValue `protobuf:"bytes,15,opt,name=allocationHostname,proto3" json:"allocationHostname,omitempty"`
	AllocationSucceeded *wrappers.BoolValue   `protobuf:"bytes,16,opt,name=allocationSucceeded,proto3" json:"allocationSucceeded,omitempty"`
	// network
	NetworkIDs                 []*wrappers.StringValue `protobuf:"bytes,21,rep,name=networkIDs,proto3" json:"networkIDs,omitempty"`
	NetworkPrefixes            []*wrappers.StringValue `protobuf:"bytes,22,rep,name=networkPrefixes,proto3" json:"networkPrefixes,omitempty"`
	NetworkIPs                 []*wrappers.StringValue `protobuf:"bytes,23,rep,name=networkIPs,proto3" json:"networkIPs,omitempty"`
	NetworkDestinationPrefixes []*wrappers.StringValue `protobuf:"bytes,24,rep,name=networkDestinationPrefixes,proto3" json:"networkDestinationPrefixes,omitempty"`
	NetworkVrfs                []*wrappers.Int64Value  `protobuf:"bytes,25,rep,name=networkVrfs,proto3" json:"networkVrfs,omitempty"`
	NetworkPrivate             *wrappers.BoolValue     `protobuf:"bytes,26,opt,name=networkPrivate,proto3" json:"networkPrivate,omitempty"`
	NetworkASNs                []*wrappers.Int64Value  `protobuf:"bytes,27,rep,name=networkASNs,proto3" json:"networkASNs,omitempty"`
	NetworkNat                 *wrappers.BoolValue     `protobuf:"bytes,28,opt,name=networkNat,proto3" json:"networkNat,omitempty"`
	NetworkUnderlay            *wrappers.BoolValue     `protobuf:"bytes,29,opt,name=networkUnderlay,proto3" json:"networkUnderlay,omitempty"`
	// hardware
	HardwareMemory   *wrappers.Int64Value `protobuf:"bytes,34,opt,name=hardwareMemory,proto3" json:"hardwareMemory,omitempty"`
	HardwareCPUCores *wrappers.Int64Value `protobuf:"bytes,35,opt,name=hardwareCPUCores,proto3" json:"hardwareCPUCores,omitempty"`
	// nics
	NicsMacAddresses         []*wrappers.StringValue `protobuf:"bytes,40,rep,name=nicsMacAddresses,proto3" json:"nicsMacAddresses,omitempty"`
	NicsNames                []*wrappers.StringValue `protobuf:"bytes,41,rep,name=nicsNames,proto3" json:"nicsNames,omitempty"`
	NicsVrfs                 []*wrappers.StringValue `protobuf:"bytes,42,rep,name=nicsVrfs,proto3" json:"nicsVrfs,omitempty"`
	NicsNeighborMacAddresses []*wrappers.StringValue `protobuf:"bytes,43,rep,name=nicsNeighborMacAddresses,proto3" json:"nicsNeighborMacAddresses,omitempty"`
	NicsNeighborNames        []*wrappers.StringValue `protobuf:"bytes,44,rep,name=nicsNeighborNames,proto3" json:"nicsNeighborNames,omitempty"`
	NicsNeighborVrfs         []*wrappers.StringValue `protobuf:"bytes,45,rep,name=nicsNeighborVrfs,proto3" json:"nicsNeighborVrfs,omitempty"`
	// disks
	DiskNames []*wrappers.StringValue `protobuf:"bytes,50,rep,name=diskNames,proto3" json:"diskNames,omitempty"`
	DiskSizes []*wrappers.Int64Value  `protobuf:"bytes,51,rep,name=diskSizes,proto3" json:"diskSizes,omitempty"`
	// state
	StateValue *wrappers.StringValue `protobuf:"bytes,56,opt,name=stateValue,proto3" json:"stateValue,omitempty"`
	// ipmi
	IpmiAddress    *wrappers.StringValue `protobuf:"bytes,61,opt,name=ipmiAddress,proto3" json:"ipmiAddress,omitempty"`
	IpmiMacAddress *wrappers.StringValue `protobuf:"bytes,62,opt,name=ipmiMacAddress,proto3" json:"ipmiMacAddress,omitempty"`
	IpmiUser       *wrappers.StringValue `protobuf:"bytes,63,opt,name=ipmiUser,proto3" json:"ipmiUser,omitempty"`
	IpmiInterface  *wrappers.StringValue `protobuf:"bytes,64,opt,name=ipmiInterface,proto3" json:"ipmiInterface,omitempty"`
	// fru
	FruChassisPartNumber   *wrappers.StringValue `protobuf:"bytes,69,opt,name=fruChassisPartNumber,proto3" json:"fruChassisPartNumber,omitempty"`
	FruChassisPartSerial   *wrappers.StringValue `protobuf:"bytes,70,opt,name=fruChassisPartSerial,proto3" json:"fruChassisPartSerial,omitempty"`
	FruBoardMfg            *wrappers.StringValue `protobuf:"bytes,71,opt,name=fruBoardMfg,proto3" json:"fruBoardMfg,omitempty"`
	FruBoardMfgSerial      *wrappers.StringValue `protobuf:"bytes,72,opt,name=fruBoardMfgSerial,proto3" json:"fruBoardMfgSerial,omitempty"`
	FruBoardPartNumber     *wrappers.StringValue `protobuf:"bytes,73,opt,name=fruBoardPartNumber,proto3" json:"fruBoardPartNumber,omitempty"`
	FruProductManufacturer *wrappers.StringValue `protobuf:"bytes,74,opt,name=fruProductManufacturer,proto3" json:"fruProductManufacturer,omitempty"`
	FruProductPartNumber   *wrappers.StringValue `protobuf:"bytes,75,opt,name=fruProductPartNumber,proto3" json:"fruProductPartNumber,omitempty"`
	FruProductSerial       *wrappers.StringValue `protobuf:"bytes,76,opt,name=fruProductSerial,proto3" json:"fruProductSerial,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *MachineSearchQuery) Reset()         { *m = MachineSearchQuery{} }
func (m *MachineSearchQuery) String() string { return proto.CompactTextString(m) }
func (*MachineSearchQuery) ProtoMessage()    {}
func (*MachineSearchQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{21}
}

func (m *MachineSearchQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineSearchQuery.Unmarshal(m, b)
}
func (m *MachineSearchQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineSearchQuery.Marshal(b, m, deterministic)
}
func (m *MachineSearchQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineSearchQuery.Merge(m, src)
}
func (m *MachineSearchQuery) XXX_Size() int {
	return xxx_messageInfo_MachineSearchQuery.Size(m)
}
func (m *MachineSearchQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineSearchQuery.DiscardUnknown(m)
}

var xxx_messageInfo_MachineSearchQuery proto.InternalMessageInfo

func (m *MachineSearchQuery) GetID() *wrappers.StringValue {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *MachineSearchQuery) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MachineSearchQuery) GetPartitionID() *wrappers.StringValue {
	if m != nil {
		return m.PartitionID
	}
	return nil
}

func (m *MachineSearchQuery) GetSizeID() *wrappers.StringValue {
	if m != nil {
		return m.SizeID
	}
	return nil
}

func (m *MachineSearchQuery) GetRackID() *wrappers.StringValue {
	if m != nil {
		return m.RackID
	}
	return nil
}

func (m *MachineSearchQuery) GetLiveliness() *wrappers.StringValue {
	if m != nil {
		return m.Liveliness
	}
	return nil
}

func (m *MachineSearchQuery) GetTags() []*wrappers.StringValue {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MachineSearchQuery) GetAllocationName() *wrappers.StringValue {
	if m != nil {
		return m.AllocationName
	}
	return nil
}

func (m *MachineSearchQuery) GetAllocationProject() *wrappers.StringValue {
	if m != nil {
		return m.AllocationProject
	}
	return nil
}

func (m *MachineSearchQuery) GetAllocationImageID() *wrappers.StringValue {
	if m != nil {
		return m.AllocationImageID
	}
	return nil
}

func (m *MachineSearchQuery) GetAllocationHostname() *wrappers.StringValue {
	if m != nil {
		return m.AllocationHostname
	}
	return nil
}

func (m *MachineSearchQuery) GetAllocationSucceeded() *wrappers.BoolValue {
	if m != nil {
		return m.AllocationSucceeded
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkIDs() []*wrappers.StringValue {
	if m != nil {
		return m.NetworkIDs
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkPrefixes() []*wrappers.StringValue {
	if m != nil {
		return m.NetworkPrefixes
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkIPs() []*wrappers.StringValue {
	if m != nil {
		return m.NetworkIPs
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkDestinationPrefixes() []*wrappers.StringValue {
	if m != nil {
		return m.NetworkDestinationPrefixes
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkVrfs() []*wrappers.Int64Value {
	if m != nil {
		return m.NetworkVrfs
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkPrivate() *wrappers.BoolValue {
	if m != nil {
		return m.NetworkPrivate
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkASNs() []*wrappers.Int64Value {
	if m != nil {
		return m.NetworkASNs
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkNat() *wrappers.BoolValue {
	if m != nil {
		return m.NetworkNat
	}
	return nil
}

func (m *MachineSearchQuery) GetNetworkUnderlay() *wrappers.BoolValue {
	if m != nil {
		return m.NetworkUnderlay
	}
	return nil
}

func (m *MachineSearchQuery) GetHardwareMemory() *wrappers.Int64Value {
	if m != nil {
		return m.HardwareMemory
	}
	return nil
}

func (m *MachineSearchQuery) GetHardwareCPUCores() *wrappers.Int64Value {
	if m != nil {
		return m.HardwareCPUCores
	}
	return nil
}

func (m *MachineSearchQuery) GetNicsMacAddresses() []*wrappers.StringValue {
	if m != nil {
		return m.NicsMacAddresses
	}
	return nil
}

func (m *MachineSearchQuery) GetNicsNames() []*wrappers.StringValue {
	if m != nil {
		return m.NicsNames
	}
	return nil
}

func (m *MachineSearchQuery) GetNicsVrfs() []*wrappers.StringValue {
	if m != nil {
		return m.NicsVrfs
	}
	return nil
}

func (m *MachineSearchQuery) GetNicsNeighborMacAddresses() []*wrappers.StringValue {
	if m != nil {
		return m.NicsNeighborMacAddresses
	}
	return nil
}

func (m *MachineSearchQuery) GetNicsNeighborNames() []*wrappers.StringValue {
	if m != nil {
		return m.NicsNeighborNames
	}
	return nil
}

func (m *MachineSearchQuery) GetNicsNeighborVrfs() []*wrappers.StringValue {
	if m != nil {
		return m.NicsNeighborVrfs
	}
	return nil
}

func (m *MachineSearchQuery) GetDiskNames() []*wrappers.StringValue {
	if m != nil {
		return m.DiskNames
	}
	return nil
}

func (m *MachineSearchQuery) GetDiskSizes() []*wrappers.Int64Value {
	if m != nil {
		return m.DiskSizes
	}
	return nil
}

func (m *MachineSearchQuery) GetStateValue() *wrappers.StringValue {
	if m != nil {
		return m.StateValue
	}
	return nil
}

func (m *MachineSearchQuery) GetIpmiAddress() *wrappers.StringValue {
	if m != nil {
		return m.IpmiAddress
	}
	return nil
}

func (m *MachineSearchQuery) GetIpmiMacAddress() *wrappers.StringValue {
	if m != nil {
		return m.IpmiMacAddress
	}
	return nil
}

func (m *MachineSearchQuery) GetIpmiUser() *wrappers.StringValue {
	if m != nil {
		return m.IpmiUser
	}
	return nil
}

func (m *MachineSearchQuery) GetIpmiInterface() *wrappers.StringValue {
	if m != nil {
		return m.IpmiInterface
	}
	return nil
}

func (m *MachineSearchQuery) GetFruChassisPartNumber() *wrappers.StringValue {
	if m != nil {
		return m.FruChassisPartNumber
	}
	return nil
}

func (m *MachineSearchQuery) GetFruChassisPartSerial() *wrappers.StringValue {
	if m != nil {
		return m.FruChassisPartSerial
	}
	return nil
}

func (m *MachineSearchQuery) GetFruBoardMfg() *wrappers.StringValue {
	if m != nil {
		return m.FruBoardMfg
	}
	return nil
}

func (m *MachineSearchQuery) GetFruBoardMfgSerial() *wrappers.StringValue {
	if m != nil {
		return m.FruBoardMfgSerial
	}
	return nil
}

func (m *MachineSearchQuery) GetFruBoardPartNumber() *wrappers.StringValue {
	if m != nil {
		return m.FruBoardPartNumber
	}
	return nil
}

func (m *MachineSearchQuery) GetFruProductManufacturer() *wrappers.StringValue {
	if m != nil {
		return m.FruProductManufacturer
	}
	return nil
}

func (m *MachineSearchQuery) GetFruProductPartNumber() *wrappers.StringValue {
	if m != nil {
		return m.FruProductPartNumber
	}
	return nil
}

func (m *MachineSearchQuery) GetFruProductSerial() *wrappers.StringValue {
	if m != nil {
		return m.FruProductSerial
	}
	return nil
}

type MachineIPMIResponse struct {
	Common               *Common      `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Machine              *Machine     `protobuf:"bytes,2,opt,name=machine,proto3" json:"machine,omitempty"`
	IPMI                 *MachineIPMI `protobuf:"bytes,3,opt,name=IPMI,proto3" json:"IPMI,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MachineIPMIResponse) Reset()         { *m = MachineIPMIResponse{} }
func (m *MachineIPMIResponse) String() string { return proto.CompactTextString(m) }
func (*MachineIPMIResponse) ProtoMessage()    {}
func (*MachineIPMIResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{22}
}

func (m *MachineIPMIResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineIPMIResponse.Unmarshal(m, b)
}
func (m *MachineIPMIResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineIPMIResponse.Marshal(b, m, deterministic)
}
func (m *MachineIPMIResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineIPMIResponse.Merge(m, src)
}
func (m *MachineIPMIResponse) XXX_Size() int {
	return xxx_messageInfo_MachineIPMIResponse.Size(m)
}
func (m *MachineIPMIResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineIPMIResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MachineIPMIResponse proto.InternalMessageInfo

func (m *MachineIPMIResponse) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *MachineIPMIResponse) GetMachine() *Machine {
	if m != nil {
		return m.Machine
	}
	return nil
}

func (m *MachineIPMIResponse) GetIPMI() *MachineIPMI {
	if m != nil {
		return m.IPMI
	}
	return nil
}

type MachineIPMIListResponse struct {
	MachineIPMIList      []*MachineIPMIResponse `protobuf:"bytes,1,rep,name=machineIPMIList,proto3" json:"machineIPMIList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MachineIPMIListResponse) Reset()         { *m = MachineIPMIListResponse{} }
func (m *MachineIPMIListResponse) String() string { return proto.CompactTextString(m) }
func (*MachineIPMIListResponse) ProtoMessage()    {}
func (*MachineIPMIListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{23}
}

func (m *MachineIPMIListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineIPMIListResponse.Unmarshal(m, b)
}
func (m *MachineIPMIListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineIPMIListResponse.Marshal(b, m, deterministic)
}
func (m *MachineIPMIListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineIPMIListResponse.Merge(m, src)
}
func (m *MachineIPMIListResponse) XXX_Size() int {
	return xxx_messageInfo_MachineIPMIListResponse.Size(m)
}
func (m *MachineIPMIListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineIPMIListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MachineIPMIListResponse proto.InternalMessageInfo

func (m *MachineIPMIListResponse) GetMachineIPMIList() []*MachineIPMIResponse {
	if m != nil {
		return m.MachineIPMIList
	}
	return nil
}

type MachineIPMIReportRequest struct {
	PartitionID          string            `protobuf:"bytes,1,opt,name=PartitionID,proto3" json:"PartitionID,omitempty"`
	ActiveLeases         map[string]string `protobuf:"bytes,2,rep,name=activeLeases,proto3" json:"activeLeases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MachineIPMIReportRequest) Reset()         { *m = MachineIPMIReportRequest{} }
func (m *MachineIPMIReportRequest) String() string { return proto.CompactTextString(m) }
func (*MachineIPMIReportRequest) ProtoMessage()    {}
func (*MachineIPMIReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{24}
}

func (m *MachineIPMIReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineIPMIReportRequest.Unmarshal(m, b)
}
func (m *MachineIPMIReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineIPMIReportRequest.Marshal(b, m, deterministic)
}
func (m *MachineIPMIReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineIPMIReportRequest.Merge(m, src)
}
func (m *MachineIPMIReportRequest) XXX_Size() int {
	return xxx_messageInfo_MachineIPMIReportRequest.Size(m)
}
func (m *MachineIPMIReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineIPMIReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineIPMIReportRequest proto.InternalMessageInfo

func (m *MachineIPMIReportRequest) GetPartitionID() string {
	if m != nil {
		return m.PartitionID
	}
	return ""
}

func (m *MachineIPMIReportRequest) GetActiveLeases() map[string]string {
	if m != nil {
		return m.ActiveLeases
	}
	return nil
}

type MachineIPMIReportResponse struct {
	UpdatedLeases        map[string]string `protobuf:"bytes,1,rep,name=updatedLeases,proto3" json:"updatedLeases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedLeases        map[string]string `protobuf:"bytes,2,rep,name=createdLeases,proto3" json:"createdLeases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MachineIPMIReportResponse) Reset()         { *m = MachineIPMIReportResponse{} }
func (m *MachineIPMIReportResponse) String() string { return proto.CompactTextString(m) }
func (*MachineIPMIReportResponse) ProtoMessage()    {}
func (*MachineIPMIReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{25}
}

func (m *MachineIPMIReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineIPMIReportResponse.Unmarshal(m, b)
}
func (m *MachineIPMIReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineIPMIReportResponse.Marshal(b, m, deterministic)
}
func (m *MachineIPMIReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineIPMIReportResponse.Merge(m, src)
}
func (m *MachineIPMIReportResponse) XXX_Size() int {
	return xxx_messageInfo_MachineIPMIReportResponse.Size(m)
}
func (m *MachineIPMIReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineIPMIReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MachineIPMIReportResponse proto.InternalMessageInfo

func (m *MachineIPMIReportResponse) GetUpdatedLeases() map[string]string {
	if m != nil {
		return m.UpdatedLeases
	}
	return nil
}

func (m *MachineIPMIReportResponse) GetCreatedLeases() map[string]string {
	if m != nil {
		return m.CreatedLeases
	}
	return nil
}

type MachineReinstallRequest struct {
	Common               *Common  `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ImageID              string   `protobuf:"bytes,2,opt,name=imageID,proto3" json:"imageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineReinstallRequest) Reset()         { *m = MachineReinstallRequest{} }
func (m *MachineReinstallRequest) String() string { return proto.CompactTextString(m) }
func (*MachineReinstallRequest) ProtoMessage()    {}
func (*MachineReinstallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{26}
}

func (m *MachineReinstallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineReinstallRequest.Unmarshal(m, b)
}
func (m *MachineReinstallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineReinstallRequest.Marshal(b, m, deterministic)
}
func (m *MachineReinstallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineReinstallRequest.Merge(m, src)
}
func (m *MachineReinstallRequest) XXX_Size() int {
	return xxx_messageInfo_MachineReinstallRequest.Size(m)
}
func (m *MachineReinstallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineReinstallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineReinstallRequest proto.InternalMessageInfo

func (m *MachineReinstallRequest) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *MachineReinstallRequest) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

type MachineNic struct {
	MacAddress           string   `protobuf:"bytes,1,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineNic) Reset()         { *m = MachineNic{} }
func (m *MachineNic) String() string { return proto.CompactTextString(m) }
func (*MachineNic) ProtoMessage()    {}
func (*MachineNic) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{27}
}

func (m *MachineNic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineNic.Unmarshal(m, b)
}
func (m *MachineNic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineNic.Marshal(b, m, deterministic)
}
func (m *MachineNic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineNic.Merge(m, src)
}
func (m *MachineNic) XXX_Size() int {
	return xxx_messageInfo_MachineNic.Size(m)
}
func (m *MachineNic) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineNic.DiscardUnknown(m)
}

var xxx_messageInfo_MachineNic proto.InternalMessageInfo

func (m *MachineNic) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *MachineNic) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MachineNicExtended struct {
	MachineNic           *MachineNic           `protobuf:"bytes,1,opt,name=machineNic,proto3" json:"machineNic,omitempty"`
	Neighbors            []*MachineNicExtended `protobuf:"bytes,2,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MachineNicExtended) Reset()         { *m = MachineNicExtended{} }
func (m *MachineNicExtended) String() string { return proto.CompactTextString(m) }
func (*MachineNicExtended) ProtoMessage()    {}
func (*MachineNicExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{28}
}

func (m *MachineNicExtended) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineNicExtended.Unmarshal(m, b)
}
func (m *MachineNicExtended) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineNicExtended.Marshal(b, m, deterministic)
}
func (m *MachineNicExtended) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineNicExtended.Merge(m, src)
}
func (m *MachineNicExtended) XXX_Size() int {
	return xxx_messageInfo_MachineNicExtended.Size(m)
}
func (m *MachineNicExtended) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineNicExtended.DiscardUnknown(m)
}

var xxx_messageInfo_MachineNicExtended proto.InternalMessageInfo

func (m *MachineNicExtended) GetMachineNic() *MachineNic {
	if m != nil {
		return m.MachineNic
	}
	return nil
}

func (m *MachineNicExtended) GetNeighbors() []*MachineNicExtended {
	if m != nil {
		return m.Neighbors
	}
	return nil
}

// A machine representing a bare metal machine
type Machine struct {
	Common                   *Common                          `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	PartitionResponse        *PartitionResponse               `protobuf:"bytes,2,opt,name=partitionResponse,proto3" json:"partitionResponse,omitempty"`
	RackID                   string                           `protobuf:"bytes,3,opt,name=rackID,proto3" json:"rackID,omitempty"`
	SizeResponse             *SizeResponse                    `protobuf:"bytes,4,opt,name=sizeResponse,proto3" json:"sizeResponse,omitempty"`
	Hardware                 *MachineHardware                 `protobuf:"bytes,5,opt,name=hardware,proto3" json:"hardware,omitempty"`
	BIOS                     *MachineBIOS                     `protobuf:"bytes,6,opt,name=BIOS,proto3" json:"BIOS,omitempty"`
	Allocation               *MachineAllocation               `protobuf:"bytes,7,opt,name=allocation,proto3" json:"allocation,omitempty"`
	State                    *MachineState                    `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	LedState                 *ChassisIdentifyLEDState         `protobuf:"bytes,9,opt,name=ledState,proto3" json:"ledState,omitempty"`
	Liveliness               string                           `protobuf:"bytes,10,opt,name=liveliness,proto3" json:"liveliness,omitempty"`
	RecentProvisioningEvents *MachineRecentProvisioningEvents `protobuf:"bytes,11,opt,name=recentProvisioningEvents,proto3" json:"recentProvisioningEvents,omitempty"`
	Tags                     []*wrappers.StringValue          `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                         `json:"-"`
	XXX_unrecognized         []byte                           `json:"-"`
	XXX_sizecache            int32                            `json:"-"`
}

func (m *Machine) Reset()         { *m = Machine{} }
func (m *Machine) String() string { return proto.CompactTextString(m) }
func (*Machine) ProtoMessage()    {}
func (*Machine) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{29}
}

func (m *Machine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Machine.Unmarshal(m, b)
}
func (m *Machine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Machine.Marshal(b, m, deterministic)
}
func (m *Machine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Machine.Merge(m, src)
}
func (m *Machine) XXX_Size() int {
	return xxx_messageInfo_Machine.Size(m)
}
func (m *Machine) XXX_DiscardUnknown() {
	xxx_messageInfo_Machine.DiscardUnknown(m)
}

var xxx_messageInfo_Machine proto.InternalMessageInfo

func (m *Machine) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *Machine) GetPartitionResponse() *PartitionResponse {
	if m != nil {
		return m.PartitionResponse
	}
	return nil
}

func (m *Machine) GetRackID() string {
	if m != nil {
		return m.RackID
	}
	return ""
}

func (m *Machine) GetSizeResponse() *SizeResponse {
	if m != nil {
		return m.SizeResponse
	}
	return nil
}

func (m *Machine) GetHardware() *MachineHardware {
	if m != nil {
		return m.Hardware
	}
	return nil
}

func (m *Machine) GetBIOS() *MachineBIOS {
	if m != nil {
		return m.BIOS
	}
	return nil
}

func (m *Machine) GetAllocation() *MachineAllocation {
	if m != nil {
		return m.Allocation
	}
	return nil
}

func (m *Machine) GetState() *MachineState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Machine) GetLedState() *ChassisIdentifyLEDState {
	if m != nil {
		return m.LedState
	}
	return nil
}

func (m *Machine) GetLiveliness() string {
	if m != nil {
		return m.Liveliness
	}
	return ""
}

func (m *Machine) GetRecentProvisioningEvents() *MachineRecentProvisioningEvents {
	if m != nil {
		return m.RecentProvisioningEvents
	}
	return nil
}

func (m *Machine) GetTags() []*wrappers.StringValue {
	if m != nil {
		return m.Tags
	}
	return nil
}

type MachineCreateRequest struct {
	Machine              *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineCreateRequest) Reset()         { *m = MachineCreateRequest{} }
func (m *MachineCreateRequest) String() string { return proto.CompactTextString(m) }
func (*MachineCreateRequest) ProtoMessage()    {}
func (*MachineCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{30}
}

func (m *MachineCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineCreateRequest.Unmarshal(m, b)
}
func (m *MachineCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineCreateRequest.Marshal(b, m, deterministic)
}
func (m *MachineCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineCreateRequest.Merge(m, src)
}
func (m *MachineCreateRequest) XXX_Size() int {
	return xxx_messageInfo_MachineCreateRequest.Size(m)
}
func (m *MachineCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineCreateRequest proto.InternalMessageInfo

func (m *MachineCreateRequest) GetMachine() *Machine {
	if m != nil {
		return m.Machine
	}
	return nil
}

type MachineUpdateRequest struct {
	Machine              *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineUpdateRequest) Reset()         { *m = MachineUpdateRequest{} }
func (m *MachineUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*MachineUpdateRequest) ProtoMessage()    {}
func (*MachineUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{31}
}

func (m *MachineUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineUpdateRequest.Unmarshal(m, b)
}
func (m *MachineUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineUpdateRequest.Marshal(b, m, deterministic)
}
func (m *MachineUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineUpdateRequest.Merge(m, src)
}
func (m *MachineUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_MachineUpdateRequest.Size(m)
}
func (m *MachineUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineUpdateRequest proto.InternalMessageInfo

func (m *MachineUpdateRequest) GetMachine() *Machine {
	if m != nil {
		return m.Machine
	}
	return nil
}

type MachineDeleteRequest struct {
	Identifiable         *Identifiable `protobuf:"bytes,1,opt,name=identifiable,proto3" json:"identifiable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MachineDeleteRequest) Reset()         { *m = MachineDeleteRequest{} }
func (m *MachineDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*MachineDeleteRequest) ProtoMessage()    {}
func (*MachineDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{32}
}

func (m *MachineDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineDeleteRequest.Unmarshal(m, b)
}
func (m *MachineDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineDeleteRequest.Marshal(b, m, deterministic)
}
func (m *MachineDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineDeleteRequest.Merge(m, src)
}
func (m *MachineDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_MachineDeleteRequest.Size(m)
}
func (m *MachineDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineDeleteRequest proto.InternalMessageInfo

func (m *MachineDeleteRequest) GetIdentifiable() *Identifiable {
	if m != nil {
		return m.Identifiable
	}
	return nil
}

type MachineGetRequest struct {
	Identifiable         *Identifiable `protobuf:"bytes,1,opt,name=identifiable,proto3" json:"identifiable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MachineGetRequest) Reset()         { *m = MachineGetRequest{} }
func (m *MachineGetRequest) String() string { return proto.CompactTextString(m) }
func (*MachineGetRequest) ProtoMessage()    {}
func (*MachineGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{33}
}

func (m *MachineGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineGetRequest.Unmarshal(m, b)
}
func (m *MachineGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineGetRequest.Marshal(b, m, deterministic)
}
func (m *MachineGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineGetRequest.Merge(m, src)
}
func (m *MachineGetRequest) XXX_Size() int {
	return xxx_messageInfo_MachineGetRequest.Size(m)
}
func (m *MachineGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineGetRequest proto.InternalMessageInfo

func (m *MachineGetRequest) GetIdentifiable() *Identifiable {
	if m != nil {
		return m.Identifiable
	}
	return nil
}

type MachineFindRequest struct {
	MachineSearchQuery   *MachineSearchQuery `protobuf:"bytes,1,opt,name=machineSearchQuery,proto3" json:"machineSearchQuery,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MachineFindRequest) Reset()         { *m = MachineFindRequest{} }
func (m *MachineFindRequest) String() string { return proto.CompactTextString(m) }
func (*MachineFindRequest) ProtoMessage()    {}
func (*MachineFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{34}
}

func (m *MachineFindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineFindRequest.Unmarshal(m, b)
}
func (m *MachineFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineFindRequest.Marshal(b, m, deterministic)
}
func (m *MachineFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineFindRequest.Merge(m, src)
}
func (m *MachineFindRequest) XXX_Size() int {
	return xxx_messageInfo_MachineFindRequest.Size(m)
}
func (m *MachineFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineFindRequest proto.InternalMessageInfo

func (m *MachineFindRequest) GetMachineSearchQuery() *MachineSearchQuery {
	if m != nil {
		return m.MachineSearchQuery
	}
	return nil
}

type MachineIPMIGetRequest struct {
	Identifiable         *Identifiable `protobuf:"bytes,1,opt,name=identifiable,proto3" json:"identifiable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MachineIPMIGetRequest) Reset()         { *m = MachineIPMIGetRequest{} }
func (m *MachineIPMIGetRequest) String() string { return proto.CompactTextString(m) }
func (*MachineIPMIGetRequest) ProtoMessage()    {}
func (*MachineIPMIGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{35}
}

func (m *MachineIPMIGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineIPMIGetRequest.Unmarshal(m, b)
}
func (m *MachineIPMIGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineIPMIGetRequest.Marshal(b, m, deterministic)
}
func (m *MachineIPMIGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineIPMIGetRequest.Merge(m, src)
}
func (m *MachineIPMIGetRequest) XXX_Size() int {
	return xxx_messageInfo_MachineIPMIGetRequest.Size(m)
}
func (m *MachineIPMIGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineIPMIGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineIPMIGetRequest proto.InternalMessageInfo

func (m *MachineIPMIGetRequest) GetIdentifiable() *Identifiable {
	if m != nil {
		return m.Identifiable
	}
	return nil
}

type MachineIPMIFindRequest struct {
	MachineSearchQuery   *MachineSearchQuery `protobuf:"bytes,1,opt,name=machineSearchQuery,proto3" json:"machineSearchQuery,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MachineIPMIFindRequest) Reset()         { *m = MachineIPMIFindRequest{} }
func (m *MachineIPMIFindRequest) String() string { return proto.CompactTextString(m) }
func (*MachineIPMIFindRequest) ProtoMessage()    {}
func (*MachineIPMIFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{36}
}

func (m *MachineIPMIFindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineIPMIFindRequest.Unmarshal(m, b)
}
func (m *MachineIPMIFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineIPMIFindRequest.Marshal(b, m, deterministic)
}
func (m *MachineIPMIFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineIPMIFindRequest.Merge(m, src)
}
func (m *MachineIPMIFindRequest) XXX_Size() int {
	return xxx_messageInfo_MachineIPMIFindRequest.Size(m)
}
func (m *MachineIPMIFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineIPMIFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineIPMIFindRequest proto.InternalMessageInfo

func (m *MachineIPMIFindRequest) GetMachineSearchQuery() *MachineSearchQuery {
	if m != nil {
		return m.MachineSearchQuery
	}
	return nil
}

type MachineResponse struct {
	Common               *Common  `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Machine              *Machine `protobuf:"bytes,2,opt,name=machine,proto3" json:"machine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineResponse) Reset()         { *m = MachineResponse{} }
func (m *MachineResponse) String() string { return proto.CompactTextString(m) }
func (*MachineResponse) ProtoMessage()    {}
func (*MachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{37}
}

func (m *MachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineResponse.Unmarshal(m, b)
}
func (m *MachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineResponse.Marshal(b, m, deterministic)
}
func (m *MachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineResponse.Merge(m, src)
}
func (m *MachineResponse) XXX_Size() int {
	return xxx_messageInfo_MachineResponse.Size(m)
}
func (m *MachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MachineResponse proto.InternalMessageInfo

func (m *MachineResponse) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *MachineResponse) GetMachine() *Machine {
	if m != nil {
		return m.Machine
	}
	return nil
}

type MachineListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachineListRequest) Reset()         { *m = MachineListRequest{} }
func (m *MachineListRequest) String() string { return proto.CompactTextString(m) }
func (*MachineListRequest) ProtoMessage()    {}
func (*MachineListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{38}
}

func (m *MachineListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineListRequest.Unmarshal(m, b)
}
func (m *MachineListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineListRequest.Marshal(b, m, deterministic)
}
func (m *MachineListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineListRequest.Merge(m, src)
}
func (m *MachineListRequest) XXX_Size() int {
	return xxx_messageInfo_MachineListRequest.Size(m)
}
func (m *MachineListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachineListRequest proto.InternalMessageInfo

type MachineListResponse struct {
	Machines             []*MachineResponse `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MachineListResponse) Reset()         { *m = MachineListResponse{} }
func (m *MachineListResponse) String() string { return proto.CompactTextString(m) }
func (*MachineListResponse) ProtoMessage()    {}
func (*MachineListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1940b0ac6d52d698, []int{39}
}

func (m *MachineListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineListResponse.Unmarshal(m, b)
}
func (m *MachineListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineListResponse.Marshal(b, m, deterministic)
}
func (m *MachineListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineListResponse.Merge(m, src)
}
func (m *MachineListResponse) XXX_Size() int {
	return xxx_messageInfo_MachineListResponse.Size(m)
}
func (m *MachineListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MachineListResponse proto.InternalMessageInfo

func (m *MachineListResponse) GetMachines() []*MachineResponse {
	if m != nil {
		return m.Machines
	}
	return nil
}

func init() {
	proto.RegisterEnum("v1.MachineState_State", MachineState_State_name, MachineState_State_value)
	proto.RegisterEnum("v1.ChassisIdentifyLEDState_State", ChassisIdentifyLEDState_State_name, ChassisIdentifyLEDState_State_value)
	proto.RegisterType((*MachineSetup)(nil), "v1.MachineSetup")
	proto.RegisterType((*MachineReinstall)(nil), "v1.MachineReinstall")
	proto.RegisterType((*MachineNetwork)(nil), "v1.MachineNetwork")
	proto.RegisterType((*MachineAllocation)(nil), "v1.MachineAllocation")
	proto.RegisterType((*MachineHardwareBase)(nil), "v1.MachineHardwareBase")
	proto.RegisterType((*MachineHardware)(nil), "v1.MachineHardware")
	proto.RegisterType((*MachineHardwareExtended)(nil), "v1.MachineHardwareExtended")
	proto.RegisterType((*MachineState)(nil), "v1.MachineState")
	proto.RegisterType((*ChassisIdentifyLEDState)(nil), "v1.ChassisIdentifyLEDState")
	proto.RegisterType((*MachineBlockDevice)(nil), "v1.MachineBlockDevice")
	proto.RegisterType((*MachineRecentProvisioningEvents)(nil), "v1.MachineRecentProvisioningEvents")
	proto.RegisterType((*MachineProvisioningEvent)(nil), "v1.MachineProvisioningEvent")
	proto.RegisterType((*MachineLivelinessReport)(nil), "v1.MachineLivelinessReport")
	proto.RegisterType((*MachineBIOS)(nil), "v1.MachineBIOS")
	proto.RegisterType((*MachineIPMI)(nil), "v1.MachineIPMI")
	proto.RegisterType((*MachineFru)(nil), "v1.MachineFru")
	proto.RegisterType((*MachineRegisterRequest)(nil), "v1.MachineRegisterRequest")
	proto.RegisterType((*MachineAllocateRequest)(nil), "v1.MachineAllocateRequest")
	proto.RegisterType((*MachineAllocationNetwork)(nil), "v1.MachineAllocationNetwork")
	proto.RegisterType((*MachineDiskPartition)(nil), "v1.MachineDiskPartition")
	proto.RegisterMapType((map[string]string)(nil), "v1.MachineDiskPartition.PropertiesEntry")
	proto.RegisterType((*MachineFinalizeAllocationRequest)(nil), "v1.MachineFinalizeAllocationRequest")
	proto.RegisterType((*MachineSearchQuery)(nil), "v1.MachineSearchQuery")
	proto.RegisterType((*MachineIPMIResponse)(nil), "v1.MachineIPMIResponse")
	proto.RegisterType((*MachineIPMIListResponse)(nil), "v1.MachineIPMIListResponse")
	proto.RegisterType((*MachineIPMIReportRequest)(nil), "v1.MachineIPMIReportRequest")
	proto.RegisterMapType((map[string]string)(nil), "v1.MachineIPMIReportRequest.ActiveLeasesEntry")
	proto.RegisterType((*MachineIPMIReportResponse)(nil), "v1.MachineIPMIReportResponse")
	proto.RegisterMapType((map[string]string)(nil), "v1.MachineIPMIReportResponse.CreatedLeasesEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1.MachineIPMIReportResponse.UpdatedLeasesEntry")
	proto.RegisterType((*MachineReinstallRequest)(nil), "v1.MachineReinstallRequest")
	proto.RegisterType((*MachineNic)(nil), "v1.MachineNic")
	proto.RegisterType((*MachineNicExtended)(nil), "v1.MachineNicExtended")
	proto.RegisterType((*Machine)(nil), "v1.Machine")
	proto.RegisterType((*MachineCreateRequest)(nil), "v1.MachineCreateRequest")
	proto.RegisterType((*MachineUpdateRequest)(nil), "v1.MachineUpdateRequest")
	proto.RegisterType((*MachineDeleteRequest)(nil), "v1.MachineDeleteRequest")
	proto.RegisterType((*MachineGetRequest)(nil), "v1.MachineGetRequest")
	proto.RegisterType((*MachineFindRequest)(nil), "v1.MachineFindRequest")
	proto.RegisterType((*MachineIPMIGetRequest)(nil), "v1.MachineIPMIGetRequest")
	proto.RegisterType((*MachineIPMIFindRequest)(nil), "v1.MachineIPMIFindRequest")
	proto.RegisterType((*MachineResponse)(nil), "v1.MachineResponse")
	proto.RegisterType((*MachineListRequest)(nil), "v1.MachineListRequest")
	proto.RegisterType((*MachineListResponse)(nil), "v1.MachineListResponse")
}

func init() { proto.RegisterFile("v1/machine.proto", fileDescriptor_1940b0ac6d52d698) }

var fileDescriptor_1940b0ac6d52d698 = []byte{
	// 3102 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x3a, 0x4d, 0x6f, 0x1c, 0xc7,
	0xb1, 0x5e, 0x72, 0xf9, 0x55, 0xcb, 0x8f, 0x55, 0xeb, 0x6b, 0x4c, 0xc9, 0x36, 0xdf, 0x18, 0xef,
	0x41, 0xcf, 0x96, 0x97, 0x22, 0xcd, 0x67, 0xe9, 0x19, 0x96, 0x2d, 0x92, 0x4b, 0x4a, 0x6b, 0x51,
	0xd4, 0x66, 0x56, 0x52, 0x02, 0x43, 0x80, 0x33, 0x9c, 0x69, 0x92, 0x13, 0xce, 0xce, 0xac, 0xbb,
	0x67, 0x57, 0xa6, 0x72, 0xce, 0x3d, 0x87, 0x20, 0x08, 0x90, 0xff, 0x10, 0x20, 0xff, 0x20, 0xc8,
	0x39, 0x40, 0x90, 0x93, 0x4f, 0x39, 0xe4, 0x6f, 0xe4, 0x14, 0x54, 0x7f, 0x4d, 0xcf, 0xee, 0x92,
	0x1c, 0xc2, 0xf0, 0x65, 0x31, 0x55, 0x5d, 0x55, 0x5d, 0x5d, 0x5d, 0x5d, 0x55, 0x5d, 0xbd, 0x50,
	0x1f, 0xac, 0xad, 0x76, 0xfd, 0xe0, 0x38, 0x4a, 0x68, 0xa3, 0xc7, 0xd2, 0x2c, 0x25, 0x13, 0x83,
	0xb5, 0xe5, 0xa5, 0xc1, 0xda, 0x6a, 0x90, 0x76, 0xbb, 0x69, 0x22, 0x91, 0xcb, 0xd7, 0x07, 0x6b,
	0xab, 0x51, 0x48, 0x93, 0x2c, 0x3a, 0x8c, 0xfc, 0x83, 0x58, 0xd1, 0x2e, 0x2f, 0x22, 0xba, 0xeb,
	0x1f, 0x69, 0x98, 0x0c, 0xd6, 0x56, 0x7b, 0x3e, 0xcb, 0xa2, 0x2c, 0x32, 0xac, 0x0b, 0x83, 0xb5,
	0x55, 0x1e, 0xbd, 0xd5, 0x24, 0x1f, 0x1c, 0xa5, 0xe9, 0x51, 0x4c, 0x57, 0x05, 0x74, 0xd0, 0x3f,
	0x5c, 0xcd, 0xa2, 0x2e, 0xe5, 0x99, 0xdf, 0xed, 0x29, 0x82, 0xf7, 0x87, 0x09, 0xde, 0x30, 0xbf,
	0xd7, 0xa3, 0x8c, 0xcb, 0x71, 0xf7, 0x2f, 0x15, 0x98, 0x7f, 0x26, 0x35, 0xee, 0xd0, 0xac, 0xdf,
	0x23, 0x2b, 0x50, 0xeb, 0xb1, 0xa8, 0xeb, 0xb3, 0xd3, 0x66, 0xc4, 0x4f, 0x9c, 0xca, 0x4a, 0xe5,
	0xce, 0x9c, 0x67, 0xa3, 0x90, 0x22, 0xe5, 0x6d, 0xad, 0x97, 0x33, 0x21, 0x29, 0x2c, 0x14, 0xb9,
	0x01, 0xd3, 0x51, 0x12, 0x65, 0x2c, 0x74, 0x26, 0xc5, 0xa0, 0x82, 0x88, 0x03, 0x33, 0x41, 0x37,
	0x8c, 0xa3, 0x84, 0x3a, 0x55, 0x31, 0xa0, 0x41, 0xe4, 0x38, 0xa1, 0x2c, 0xa1, 0xb1, 0x33, 0x25,
	0x39, 0x24, 0x44, 0x5c, 0x98, 0x3f, 0x48, 0xd3, 0x2c, 0x4e, 0xfd, 0x90, 0xb2, 0x56, 0xd3, 0x99,
	0x16, 0xa3, 0x05, 0x9c, 0xfb, 0x0d, 0xd4, 0xd5, 0x0a, 0x3c, 0x1a, 0x25, 0x3c, 0xf3, 0xe3, 0x98,
	0xbc, 0x0f, 0x90, 0xc6, 0x61, 0x0b, 0x8d, 0xd9, 0x6a, 0xaa, 0x45, 0x58, 0x18, 0xf2, 0x3f, 0x30,
	0xc5, 0x71, 0xb9, 0x42, 0xfb, 0xda, 0x7a, 0xbd, 0x31, 0x58, 0x6b, 0xd8, 0x66, 0xf0, 0xe4, 0xb0,
	0xfb, 0xef, 0x0a, 0x2c, 0x2a, 0xfc, 0x3e, 0xcd, 0xde, 0xa4, 0xec, 0x84, 0xdc, 0x86, 0xb9, 0x44,
	0x7e, 0x1a, 0xc9, 0x39, 0x82, 0x2c, 0xc3, 0x6c, 0x8f, 0xd1, 0xc3, 0xe8, 0x7b, 0xca, 0x9d, 0x89,
	0x95, 0xc9, 0x3b, 0x73, 0x9e, 0x81, 0x49, 0x1d, 0x26, 0x5b, 0x6d, 0xee, 0x4c, 0x0a, 0x34, 0x7e,
	0x22, 0x66, 0xc0, 0x0e, 0x85, 0x31, 0xaa, 0x1e, 0x7e, 0x22, 0x66, 0xb3, 0xb3, 0x2f, 0xac, 0x30,
	0xe9, 0xe1, 0x27, 0x1a, 0xad, 0xc7, 0xa2, 0x81, 0x9f, 0x51, 0xb1, 0xfa, 0x59, 0x4f, 0x83, 0x48,
	0x9b, 0xf8, 0x99, 0x33, 0x23, 0xb0, 0xf8, 0x49, 0xee, 0xc1, 0xd5, 0x90, 0xf2, 0x2c, 0x4a, 0x7c,
	0xdc, 0x87, 0xb6, 0x56, 0x64, 0x56, 0xcc, 0x38, 0x6e, 0x08, 0xf5, 0xed, 0x27, 0x21, 0x65, 0xb1,
	0x7f, 0xea, 0xcc, 0x09, 0x41, 0x06, 0x76, 0xff, 0x5a, 0x85, 0x2b, 0x6a, 0xf1, 0x9b, 0x71, 0x9c,
	0x06, 0x82, 0x93, 0x6c, 0xc0, 0xcc, 0x36, 0xa3, 0x7e, 0x46, 0x43, 0xb1, 0xfa, 0xda, 0xfa, 0x72,
	0x43, 0xfa, 0x58, 0x43, 0xfb, 0x58, 0xe3, 0x85, 0x76, 0x42, 0x4f, 0x93, 0x12, 0x02, 0xd5, 0xc4,
	0xef, 0x52, 0xe5, 0x2d, 0xe2, 0x9b, 0x7c, 0x09, 0xb5, 0x90, 0xf2, 0x80, 0x45, 0x3d, 0xe1, 0x48,
	0x93, 0x42, 0xda, 0xed, 0x11, 0x69, 0x9d, 0x8c, 0x45, 0xc9, 0xd1, 0x2b, 0x3f, 0xee, 0x53, 0xcf,
	0x66, 0xc0, 0x9d, 0xe8, 0xb1, 0xf4, 0x57, 0x34, 0xc8, 0x5a, 0x4d, 0xe5, 0x50, 0x39, 0x82, 0xdc,
	0x87, 0x05, 0x71, 0x98, 0x3c, 0xca, 0x7b, 0x69, 0xc2, 0xa9, 0xb0, 0x69, 0x6d, 0xfd, 0x0a, 0x6e,
	0x75, 0xcb, 0x1e, 0xf0, 0x8a, 0x74, 0xe4, 0x0b, 0x58, 0xea, 0x16, 0xb6, 0x9c, 0x3b, 0xd3, 0x2b,
	0x93, 0x77, 0x6a, 0xeb, 0xc4, 0xf2, 0x12, 0x35, 0xe4, 0x0d, 0x93, 0xa2, 0x41, 0x8f, 0x53, 0x9e,
	0x89, 0xc5, 0xce, 0x08, 0x9d, 0x0c, 0x8c, 0x5e, 0xc9, 0xf9, 0x71, 0xbb, 0x7f, 0xf0, 0x94, 0x9e,
	0xea, 0x5d, 0xb1, 0x30, 0xe4, 0x01, 0xcc, 0xf6, 0x39, 0x65, 0x4d, 0x3f, 0xf3, 0xc5, 0x66, 0x5c,
	0x64, 0x0d, 0x43, 0x4d, 0x76, 0x61, 0x29, 0x48, 0x13, 0x9e, 0xc6, 0xb4, 0xed, 0x73, 0xfe, 0x26,
	0x65, 0xa1, 0x03, 0x25, 0x04, 0x0c, 0x33, 0xa1, 0x49, 0x79, 0x3f, 0x08, 0x28, 0x0d, 0x69, 0xe8,
	0xd4, 0x84, 0x3f, 0xe4, 0x08, 0xb2, 0x0e, 0x73, 0x4c, 0x1f, 0x31, 0x67, 0x5e, 0xc8, 0xbf, 0x66,
	0xd9, 0xc4, 0x1c, 0x3f, 0x2f, 0x27, 0x73, 0xdf, 0xc0, 0x55, 0x35, 0xfc, 0xc4, 0x67, 0xe1, 0x1b,
	0x9f, 0xd1, 0x2d, 0x9f, 0x8b, 0x03, 0xdf, 0xa5, 0xdd, 0x94, 0x9d, 0x0a, 0x27, 0xaa, 0x7a, 0x0a,
	0x42, 0xf3, 0x05, 0xbd, 0xfe, 0x76, 0xca, 0xc4, 0xf9, 0xa9, 0xdc, 0x59, 0xf0, 0x0c, 0x4c, 0xee,
	0xc2, 0x54, 0x18, 0xf1, 0x13, 0x79, 0x82, 0x6a, 0xeb, 0x37, 0xac, 0xa9, 0xb7, 0xe2, 0x34, 0x38,
	0x69, 0xd2, 0x41, 0x14, 0x50, 0x4f, 0x12, 0xb9, 0x07, 0xb0, 0x34, 0x34, 0x31, 0xf9, 0x18, 0xaa,
	0x07, 0x3e, 0xa7, 0xca, 0x6f, 0x6f, 0x5a, 0xfc, 0xb6, 0x6e, 0x9e, 0x20, 0x22, 0x2e, 0x54, 0x93,
	0x28, 0x90, 0xa7, 0xb8, 0xb6, 0xbe, 0x68, 0xef, 0x7d, 0x14, 0x78, 0x62, 0xcc, 0x65, 0x70, 0x73,
	0x48, 0xc0, 0xce, 0xf7, 0x19, 0x4d, 0xd0, 0x56, 0x97, 0x9a, 0xeb, 0xa3, 0xc2, 0x5c, 0x37, 0x8a,
	0x73, 0x69, 0x91, 0x6a, 0xce, 0xdf, 0x5a, 0x11, 0x3b, 0xc3, 0x30, 0x70, 0x17, 0xa6, 0x06, 0xb8,
	0x9b, 0x62, 0xaa, 0xc5, 0x02, 0xb7, 0x20, 0x68, 0x88, 0x5f, 0x4f, 0x12, 0x61, 0xf4, 0xb6, 0x0f,
	0x9d, 0x8a, 0xde, 0x16, 0xca, 0xbd, 0x07, 0x53, 0x52, 0xf0, 0x02, 0xcc, 0x6d, 0xbe, 0xda, 0x6c,
	0xed, 0x6d, 0x6e, 0xed, 0xed, 0xd4, 0xdf, 0x21, 0xf3, 0x30, 0xeb, 0xed, 0x74, 0x76, 0xbc, 0x57,
	0x3b, 0xcd, 0x7a, 0x85, 0x00, 0x4c, 0xef, 0x3d, 0xdf, 0x7e, 0xba, 0xd3, 0xac, 0x4f, 0xb8, 0xbf,
	0xaf, 0xc0, 0xcd, 0xed, 0x63, 0x9f, 0xf3, 0x88, 0xb7, 0x64, 0x5a, 0x3b, 0xdd, 0xdb, 0x69, 0x4a,
	0x21, 0xf7, 0x8b, 0xda, 0xfd, 0x17, 0x6a, 0x77, 0x06, 0xed, 0x65, 0x15, 0x5d, 0xd1, 0x8a, 0xd6,
	0x60, 0x66, 0x6f, 0xa7, 0xf9, 0xed, 0xf3, 0xdd, 0xdd, 0xfa, 0x3b, 0x42, 0x31, 0x04, 0xf6, 0xeb,
	0x15, 0xb4, 0x15, 0x19, 0xf5, 0x10, 0x13, 0x8c, 0x2a, 0x56, 0x30, 0x22, 0x50, 0xc5, 0xbc, 0x2a,
	0xe6, 0xa9, 0x7a, 0xe2, 0x5b, 0x85, 0x5e, 0x4c, 0x7c, 0x22, 0x38, 0xc9, 0xd0, 0x8b, 0x20, 0x79,
	0x00, 0x60, 0x32, 0x33, 0x77, 0xaa, 0x62, 0xdb, 0x1c, 0xcb, 0xf0, 0x98, 0x28, 0x4d, 0x3e, 0xf4,
	0x2c, 0x5a, 0xf7, 0x9f, 0x15, 0xf8, 0xc0, 0x9c, 0x97, 0x80, 0x26, 0x59, 0x9b, 0xa5, 0x83, 0x88,
	0x47, 0x69, 0x12, 0x25, 0x47, 0x3b, 0x03, 0x9a, 0x64, 0x9c, 0x6c, 0xc0, 0x34, 0x15, 0x5f, 0x4e,
	0x45, 0x48, 0xbe, 0x6d, 0x49, 0x1e, 0x21, 0xf7, 0x14, 0x2d, 0x79, 0x04, 0x0b, 0xb1, 0xcf, 0x33,
	0x81, 0xc4, 0x08, 0xac, 0x72, 0xdb, 0x79, 0xe1, 0xb9, 0xc8, 0x40, 0xb6, 0xe0, 0x76, 0x94, 0x04,
	0x69, 0xb7, 0x17, 0xd3, 0xac, 0x30, 0xd1, 0xf6, 0x69, 0x10, 0x53, 0xae, 0xb2, 0xf9, 0xb9, 0x34,
	0xee, 0x1f, 0x2a, 0xe0, 0x9c, 0xa5, 0x2a, 0x69, 0x40, 0x15, 0x0b, 0x94, 0x12, 0x89, 0x43, 0xd0,
	0x91, 0x6b, 0x30, 0x25, 0x16, 0xa7, 0x76, 0x5f, 0x02, 0xe4, 0x33, 0x98, 0xe9, 0x52, 0xce, 0xfd,
	0x23, 0x5a, 0x2a, 0x67, 0x68, 0x62, 0xf7, 0xd7, 0xe6, 0xb4, 0xee, 0x45, 0x03, 0x8a, 0x75, 0x07,
	0xe7, 0x1e, 0xed, 0xa5, 0x2c, 0xc3, 0xc8, 0xec, 0xc7, 0xd1, 0x80, 0x6e, 0xa7, 0xfd, 0x24, 0x13,
	0xea, 0x2d, 0x78, 0x16, 0x06, 0xe3, 0x62, 0x48, 0xfd, 0x50, 0x0e, 0xcb, 0xb8, 0x94, 0x23, 0xb0,
	0x4a, 0xe9, 0x27, 0x27, 0x49, 0xfa, 0x26, 0x91, 0x04, 0x93, 0x82, 0xa0, 0x80, 0x73, 0x3b, 0x50,
	0xd3, 0x9e, 0xd8, 0x7a, 0xde, 0x41, 0xd7, 0x1a, 0x50, 0x86, 0xc6, 0x51, 0x5e, 0xa8, 0x41, 0x8c,
	0x8c, 0x03, 0x9a, 0x84, 0x29, 0x53, 0x8b, 0x56, 0x10, 0x3a, 0x68, 0x88, 0x45, 0x80, 0xdc, 0x04,
	0xf1, 0xed, 0xfe, 0x50, 0x31, 0x52, 0x5b, 0xed, 0x67, 0x2d, 0x94, 0xea, 0x87, 0x21, 0xa3, 0x9c,
	0x6b, 0xa9, 0x0a, 0xc4, 0x05, 0x76, 0xfd, 0x60, 0x53, 0x0d, 0x4a, 0xc9, 0x16, 0x06, 0xa5, 0x63,
	0x32, 0xd1, 0xd2, 0xf1, 0x5b, 0xd4, 0x32, 0x3a, 0x9b, 0xc8, 0xf4, 0x6a, 0x60, 0x34, 0x48, 0x94,
	0x64, 0x94, 0x1d, 0xfa, 0x01, 0x55, 0x35, 0x5b, 0x8e, 0x20, 0x2b, 0x30, 0x79, 0xc8, 0xfa, 0xa2,
	0x5e, 0x29, 0x86, 0xce, 0x5d, 0xd6, 0xf7, 0x70, 0x08, 0xf5, 0x39, 0xe8, 0x06, 0xaf, 0x94, 0x09,
	0x64, 0xa2, 0xb4, 0x30, 0xee, 0xdf, 0xaa, 0x00, 0x39, 0x0f, 0xf9, 0x1a, 0xae, 0x04, 0x32, 0x68,
	0xe0, 0xa9, 0xda, 0xef, 0x77, 0x0f, 0x28, 0x53, 0x5e, 0x74, 0xfe, 0xe6, 0x8f, 0xb2, 0x0d, 0xc9,
	0xea, 0x50, 0x16, 0xf9, 0xb1, 0x3a, 0x2b, 0xe5, 0x65, 0x49, 0x36, 0xcc, 0xd8, 0x07, 0xa9, 0xcf,
	0xc2, 0x67, 0x87, 0x47, 0xa5, 0x7c, 0xd1, 0x50, 0x93, 0x26, 0x2c, 0xea, 0x6f, 0xa5, 0x42, 0xb5,
	0x04, 0xff, 0x10, 0x0f, 0xe6, 0x7d, 0x81, 0xb1, 0xac, 0x32, 0x55, 0x26, 0xef, 0x0f, 0x31, 0x91,
	0x7d, 0xb8, 0xda, 0x63, 0x69, 0xd8, 0x0f, 0xb2, 0x67, 0x7e, 0xd2, 0x3f, 0xf4, 0x83, 0xac, 0xcf,
	0x28, 0x53, 0x1b, 0x78, 0xbe, 0xac, 0x71, 0x8c, 0x68, 0x63, 0x85, 0xb6, 0x34, 0x9b, 0x29, 0x63,
	0xe3, 0x11, 0x36, 0xb2, 0x05, 0x0b, 0x0a, 0xa9, 0x0c, 0x35, 0x5b, 0x42, 0x4e, 0x91, 0xc5, 0xfd,
	0xe3, 0x04, 0xdc, 0x30, 0x51, 0xf7, 0x28, 0xe2, 0x19, 0x65, 0x1e, 0xfd, 0xae, 0x4f, 0x79, 0x86,
	0x9e, 0xff, 0xf2, 0xa5, 0x29, 0xe5, 0xc5, 0xb7, 0xb8, 0x04, 0xe9, 0x90, 0xdd, 0x6a, 0xea, 0xdc,
	0x63, 0xa1, 0xf0, 0x94, 0x32, 0x3f, 0xc0, 0x2b, 0x80, 0xba, 0xe2, 0x48, 0x88, 0xdc, 0x87, 0xd9,
	0x63, 0x95, 0xdf, 0xd5, 0x86, 0xde, 0x1a, 0x93, 0xfa, 0x4d, 0x4a, 0x37, 0xc4, 0xe4, 0x43, 0xa8,
	0x62, 0x60, 0x50, 0xdb, 0xb7, 0x64, 0xd7, 0x36, 0xad, 0xe7, 0x1d, 0x4f, 0x0c, 0x22, 0x11, 0x9e,
	0x73, 0xb5, 0x2f, 0x36, 0x11, 0xa2, 0x3d, 0x31, 0x48, 0xee, 0x41, 0x35, 0xf3, 0x8f, 0xb8, 0x33,
	0xa3, 0x72, 0xc7, 0x79, 0x66, 0x12, 0x94, 0xee, 0x9f, 0xaa, 0xc6, 0x3a, 0xaa, 0xd0, 0xa7, 0xda,
	0x3a, 0x2e, 0x4c, 0xcb, 0xab, 0xab, 0x3a, 0x6d, 0x20, 0xf2, 0xb7, 0xc0, 0x78, 0x6a, 0x04, 0x27,
	0x14, 0x16, 0x2c, 0x73, 0x86, 0xa4, 0x7d, 0x1f, 0xc0, 0xec, 0x13, 0x5d, 0x24, 0x97, 0x3a, 0x36,
	0x9a, 0xfa, 0x82, 0x9a, 0x7f, 0x68, 0xdf, 0xa6, 0xc6, 0xee, 0x1b, 0xa6, 0x76, 0x73, 0x95, 0x54,
	0x10, 0x46, 0xce, 0x48, 0xdd, 0x16, 0x65, 0x30, 0xd2, 0x20, 0xea, 0xfa, 0x52, 0x17, 0xe5, 0x65,
	0x3c, 0xcf, 0x50, 0xa3, 0x5d, 0x5e, 0xe0, 0x46, 0xcc, 0x95, 0xd9, 0x08, 0xa4, 0xc4, 0xb9, 0x12,
	0x7d, 0xe7, 0x80, 0x91, 0xd4, 0x9f, 0x5f, 0xc2, 0xf4, 0xed, 0xc3, 0x50, 0x93, 0x86, 0xbc, 0x5b,
	0xd6, 0x4a, 0x4c, 0x25, 0x6e, 0x9e, 0x5f, 0x00, 0x74, 0x3a, 0x4f, 0xf4, 0x55, 0x24, 0x28, 0xc1,
	0x66, 0xd1, 0xbb, 0x6f, 0x4d, 0x8e, 0x1f, 0xd1, 0xe9, 0x82, 0xfb, 0xf1, 0x23, 0x58, 0xf0, 0xfb,
	0x59, 0xba, 0x19, 0x7c, 0xd7, 0x8f, 0x18, 0x6d, 0xb5, 0xcf, 0x2c, 0x52, 0xb6, 0xd2, 0x34, 0x56,
	0x47, 0xb9, 0xc0, 0xe0, 0xfe, 0x79, 0x12, 0xae, 0x8d, 0xab, 0xb2, 0xb0, 0x58, 0x88, 0xfd, 0x03,
	0x1a, 0xab, 0x49, 0x25, 0x80, 0x1b, 0x1e, 0x8a, 0xaa, 0x4f, 0xa7, 0x53, 0x09, 0x21, 0x3e, 0x91,
	0x61, 0x49, 0x66, 0x6b, 0x05, 0x89, 0x44, 0x89, 0x09, 0xbb, 0x9d, 0x46, 0x49, 0xa6, 0x3c, 0xcc,
	0xc2, 0x60, 0xae, 0x17, 0xd0, 0xf3, 0x9e, 0xac, 0xfd, 0xa6, 0xc4, 0x2d, 0xae, 0x80, 0x33, 0xb5,
	0xe4, 0xb4, 0x55, 0x4b, 0xbe, 0x0f, 0x70, 0x18, 0xc5, 0x94, 0x9f, 0xf2, 0x8c, 0x76, 0x75, 0xc2,
	0xcb, 0x31, 0xe8, 0x80, 0x47, 0xbd, 0xec, 0xc5, 0x69, 0x8f, 0x0a, 0x2f, 0x9b, 0xf3, 0x34, 0xa8,
	0x46, 0x1e, 0xf7, 0xa3, 0x50, 0x5c, 0x0a, 0xe5, 0x08, 0x82, 0xe4, 0x09, 0x40, 0x8f, 0xa5, 0x3d,
	0xca, 0xb2, 0x88, 0x6a, 0x87, 0xb9, 0x73, 0x56, 0x15, 0xda, 0x68, 0x1b, 0xd2, 0x9d, 0x24, 0x63,
	0xa7, 0x9e, 0xc5, 0x8b, 0xda, 0x05, 0x69, 0x92, 0xf9, 0x51, 0xc2, 0x9f, 0x77, 0xd4, 0xc5, 0xcf,
	0xc2, 0x2c, 0x3f, 0x84, 0xa5, 0x21, 0x76, 0x52, 0x87, 0xc9, 0x13, 0x7a, 0xaa, 0x8c, 0x8d, 0x9f,
	0xb8, 0x01, 0xb2, 0xd4, 0x57, 0xd5, 0x9a, 0x00, 0x3e, 0x9f, 0x78, 0x50, 0x71, 0x33, 0x58, 0xd1,
	0xc9, 0x3c, 0x4a, 0xfc, 0x38, 0x7a, 0x6b, 0xf9, 0x8d, 0x8e, 0x34, 0x77, 0x60, 0x69, 0x7b, 0xe8,
	0x0a, 0x2b, 0x65, 0x0f, 0xa3, 0x4b, 0x37, 0x6f, 0x7e, 0xb8, 0x69, 0xaa, 0xff, 0x0e, 0xf5, 0x59,
	0x70, 0xfc, 0xb3, 0x3e, 0x65, 0xa7, 0xe4, 0x2e, 0x4c, 0x28, 0xcf, 0xbc, 0xc8, 0xe5, 0x27, 0x5a,
	0x4d, 0x3c, 0xc4, 0xa6, 0x71, 0x71, 0xe1, 0x21, 0xd6, 0x6d, 0x0d, 0x3b, 0x08, 0x95, 0x6a, 0x6b,
	0xd8, 0x21, 0x6a, 0xc3, 0x84, 0xa8, 0x32, 0x15, 0x81, 0x0e, 0x60, 0x1b, 0x26, 0x21, 0x95, 0x29,
	0x00, 0x74, 0xba, 0xfa, 0x02, 0x20, 0x36, 0xb5, 0x70, 0xa9, 0x74, 0x6f, 0xd1, 0x5f, 0x3e, 0xd3,
	0x60, 0xd5, 0xe3, 0xe7, 0x11, 0x03, 0xed, 0x3a, 0x5f, 0xa6, 0xea, 0x29, 0xf2, 0x60, 0x75, 0x91,
	0x63, 0xda, 0x32, 0xfa, 0x3b, 0x0b, 0x65, 0xaa, 0x8b, 0x11, 0xb6, 0xa2, 0x2c, 0xdd, 0x30, 0x5c,
	0xbc, 0x9c, 0x2c, 0xdd, 0x55, 0xdc, 0x03, 0x92, 0x23, 0x4d, 0x82, 0x5b, 0x2a, 0x21, 0x6c, 0x0c,
	0x1f, 0xd9, 0x83, 0xab, 0x39, 0xb6, 0x63, 0xba, 0x32, 0xf5, 0x0b, 0x03, 0xe6, 0x38, 0x36, 0xdc,
	0x69, 0x13, 0x85, 0xb9, 0x73, 0xbd, 0x4c, 0xc0, 0xcf, 0xe9, 0xb1, 0xce, 0x54, 0x90, 0x69, 0x2a,
	0xde, 0x28, 0x21, 0x62, 0x98, 0xc9, 0xd6, 0xa2, 0xcd, 0x9d, 0x9b, 0x97, 0xd1, 0xa2, 0xcd, 0xc9,
	0x6b, 0x58, 0x56, 0x50, 0x73, 0x4c, 0x97, 0xd3, 0x29, 0x21, 0xed, 0x1c, 0x7e, 0xf2, 0x10, 0x6a,
	0x6a, 0xf4, 0x15, 0x3b, 0xe4, 0xce, 0xbb, 0x42, 0xdc, 0xad, 0x11, 0x71, 0xad, 0x24, 0xfb, 0x6c,
	0x43, 0x1d, 0x5b, 0x8b, 0x9e, 0x6c, 0xc1, 0xa2, 0x59, 0xad, 0x6c, 0xd7, 0x2e, 0x5f, 0xb8, 0x53,
	0x43, 0x1c, 0x96, 0x0a, 0x9b, 0x9d, 0x7d, 0xee, 0xdc, 0x2a, 0xaf, 0x02, 0xd2, 0x93, 0xcf, 0x8d,
	0x75, 0xf7, 0xfd, 0xcc, 0xb9, 0x7d, 0xe1, 0xf4, 0x16, 0x35, 0x69, 0x9a, 0x1d, 0x7e, 0xa9, 0xfb,
	0xc1, 0xef, 0x5d, 0x28, 0x60, 0x98, 0x85, 0x6c, 0xc3, 0xa2, 0xae, 0x68, 0x9f, 0xc9, 0xf6, 0x9e,
	0xab, 0x8a, 0xe0, 0x73, 0xd6, 0x30, 0xc4, 0x42, 0x1e, 0x43, 0x5d, 0x63, 0xb6, 0xdb, 0x2f, 0x65,
	0x2f, 0xf0, 0xc3, 0x8b, 0xc5, 0x8c, 0x30, 0x91, 0x27, 0x50, 0x4f, 0xa2, 0x80, 0x3f, 0x33, 0xd7,
	0x5c, 0xca, 0x9d, 0x3b, 0x25, 0xbc, 0x64, 0x84, 0x8b, 0x7c, 0x0e, 0x73, 0x88, 0xc3, 0xe8, 0xc3,
	0x9d, 0xff, 0x2d, 0x21, 0x22, 0x27, 0x17, 0x45, 0x5d, 0x14, 0x70, 0xe1, 0x54, 0x1f, 0x95, 0x60,
	0x35, 0xd4, 0xe4, 0x17, 0xe0, 0x08, 0x31, 0x34, 0x3a, 0x3a, 0x3e, 0x48, 0x59, 0x61, 0x1d, 0x1f,
	0x97, 0x90, 0x74, 0x26, 0x37, 0x46, 0x3d, 0x7b, 0x4c, 0xae, 0xeb, 0x6e, 0x09, 0x91, 0xa3, 0x6c,
	0xda, 0xca, 0x1a, 0x29, 0xd6, 0xf9, 0x49, 0x59, 0x2b, 0xdb, 0x5c, 0x68, 0xe5, 0x30, 0xe2, 0x27,
	0x52, 0x9b, 0xf5, 0x32, 0x56, 0x36, 0xe4, 0xe4, 0xff, 0x25, 0x6f, 0x27, 0x7a, 0x4b, 0xb9, 0xf3,
	0xe9, 0xc5, 0x07, 0x27, 0xa7, 0xc6, 0xa0, 0xc4, 0x33, 0x3f, 0xa3, 0x62, 0xc0, 0x79, 0x50, 0x26,
	0x09, 0xe6, 0xf4, 0x98, 0xee, 0xa3, 0x5e, 0x37, 0xd2, 0xad, 0x95, 0x87, 0x65, 0xd2, 0xbd, 0xc5,
	0x80, 0x29, 0x11, 0xc1, 0x7c, 0x7b, 0x9c, 0x2f, 0xcb, 0xa4, 0xc4, 0x22, 0x0f, 0x3a, 0x19, 0x62,
	0xf0, 0xee, 0xe1, 0x7c, 0x55, 0xe6, 0x96, 0xa2, 0xa9, 0xf1, 0x7a, 0x8d, 0xdf, 0x2d, 0xd3, 0xcd,
	0x79, 0x54, 0xe6, 0x7a, 0x5d, 0x60, 0x21, 0x6d, 0xb8, 0x76, 0xc8, 0xfa, 0xdb, 0x23, 0x1d, 0x9a,
	0x9d, 0x12, 0xa2, 0xc6, 0x72, 0x8e, 0x4a, 0x54, 0x77, 0xff, 0xdd, 0xcb, 0x4b, 0x54, 0xad, 0x92,
	0x2f, 0xa1, 0x76, 0xc8, 0xfa, 0x5b, 0xba, 0x5b, 0xf3, 0xb8, 0xcc, 0x3e, 0x59, 0x0c, 0x78, 0x64,
	0x2c, 0x50, 0xa9, 0xf3, 0xa4, 0x4c, 0xa1, 0x30, 0xc2, 0x86, 0x85, 0x82, 0x46, 0x5a, 0xd6, 0x6a,
	0x95, 0x29, 0x14, 0x46, 0xf9, 0xc8, 0x0b, 0xb8, 0x71, 0xc8, 0xfa, 0xed, 0x31, 0xfd, 0x9b, 0xaf,
	0x4b, 0x48, 0x3c, 0x83, 0x57, 0xed, 0x40, 0x7b, 0xa4, 0x8b, 0xf3, 0xb4, 0xe4, 0x0e, 0x8c, 0x70,
	0x62, 0xa0, 0xc8, 0xf1, 0xca, 0x80, 0x7b, 0x25, 0xa4, 0x8d, 0x70, 0xb9, 0xbf, 0xa9, 0x98, 0x57,
	0x25, 0xd1, 0xf8, 0xd0, 0x4f, 0x77, 0x65, 0xba, 0x15, 0xff, 0x0d, 0x33, 0xea, 0xcd, 0x4e, 0xd5,
	0xf4, 0x35, 0xfb, 0x09, 0x4b, 0x8f, 0x99, 0x56, 0xcb, 0xe4, 0x39, 0xad, 0x16, 0xf7, 0xb5, 0xe9,
	0x28, 0x23, 0xb8, 0x17, 0xf1, 0xcc, 0xa8, 0xb2, 0x69, 0x5e, 0x11, 0xf5, 0x90, 0x6a, 0xe6, 0xdf,
	0x1c, 0x16, 0xa5, 0x9f, 0x21, 0x87, 0xe9, 0xdd, 0x7f, 0xe4, 0xad, 0x74, 0x49, 0xd8, 0x4b, 0x59,
	0xa6, 0xaf, 0x4b, 0x2b, 0x50, 0x6b, 0x5b, 0xb7, 0x0c, 0xf5, 0x4e, 0x6f, 0xa1, 0x88, 0x07, 0xf3,
	0x7e, 0x90, 0x45, 0x03, 0xba, 0x47, 0x7d, 0x4e, 0xf5, 0xe3, 0x52, 0x63, 0x64, 0x7a, 0x4b, 0x6a,
	0x63, 0xd3, 0x62, 0x90, 0xb7, 0xc4, 0x82, 0x8c, 0xe5, 0xaf, 0xe0, 0xca, 0x08, 0xc9, 0xa5, 0x6e,
	0x82, 0x7f, 0x9f, 0x80, 0x77, 0xc7, 0xcc, 0xae, 0x8c, 0xf6, 0x0a, 0x16, 0xfa, 0xbd, 0xd0, 0xcf,
	0x68, 0xa8, 0x74, 0x96, 0x26, 0xbb, 0x77, 0x86, 0xce, 0x92, 0xab, 0xf1, 0xd2, 0x66, 0x91, 0x5a,
	0x17, 0xc5, 0xa0, 0xdc, 0x40, 0x3e, 0x44, 0x17, 0x6c, 0x71, 0x81, 0xdc, 0x6d, 0x9b, 0x45, 0xc9,
	0x2d, 0x88, 0x59, 0x7e, 0x04, 0x64, 0x74, 0xf2, 0xcb, 0xd8, 0x03, 0x25, 0x8c, 0x4e, 0x73, 0x29,
	0x8b, 0xfe, 0xdc, 0xf8, 0x60, 0xfe, 0xfe, 0x7a, 0x89, 0xe6, 0x9d, 0xd5, 0xf8, 0x9a, 0x28, 0x34,
	0xbe, 0xdc, 0x47, 0xa6, 0x03, 0xbf, 0x1f, 0x05, 0x43, 0x0f, 0x08, 0x95, 0x71, 0x0f, 0x08, 0xc3,
	0x0f, 0xfc, 0xee, 0x5b, 0x73, 0xff, 0xb6, 0x9e, 0x31, 0x49, 0x43, 0x48, 0x52, 0x58, 0xa5, 0xd9,
	0xf0, 0xf3, 0xaa, 0x45, 0x41, 0x36, 0x60, 0x2e, 0x51, 0x55, 0xc2, 0x45, 0x2f, 0xa4, 0x39, 0xa1,
	0xfb, 0xaf, 0x2a, 0xcc, 0x28, 0x8a, 0x52, 0x76, 0xd8, 0x86, 0x2b, 0xe6, 0x12, 0x6e, 0xfe, 0x32,
	0x20, 0x03, 0xc4, 0x75, 0x24, 0x6f, 0x0f, 0x0f, 0x7a, 0xa3, 0xf4, 0x67, 0x76, 0x85, 0x37, 0x60,
	0x1e, 0xaf, 0xe9, 0x46, 0x6e, 0x35, 0x6f, 0x5c, 0x74, 0x2c, 0xbc, 0x57, 0xa0, 0x22, 0xab, 0x56,
	0x2f, 0x59, 0x5e, 0xea, 0xaf, 0x8e, 0xe9, 0x25, 0x8f, 0xe9, 0x21, 0x4f, 0x9f, 0xd7, 0x43, 0xfe,
	0x3f, 0x80, 0xfc, 0x7e, 0xa8, 0x7a, 0xf2, 0xd7, 0xc7, 0x76, 0x19, 0x3d, 0x8b, 0x50, 0x34, 0x5d,
	0xb0, 0xe8, 0x51, 0x3d, 0xd0, 0xfa, 0xf0, 0x2b, 0xb3, 0x27, 0x87, 0xc9, 0x7d, 0x98, 0x8d, 0x69,
	0x28, 0x50, 0xea, 0x3f, 0x0c, 0xb7, 0xce, 0x79, 0xf2, 0xf5, 0x0c, 0x31, 0x3a, 0x98, 0xd5, 0x8a,
	0x00, 0xe9, 0x60, 0x56, 0xb3, 0xe1, 0x5b, 0x70, 0xd8, 0x19, 0x0f, 0xa6, 0xa2, 0x61, 0x55, 0x5b,
	0xff, 0xb0, 0xf0, 0x5f, 0x84, 0xf1, 0xa4, 0xde, 0x99, 0x42, 0x4c, 0x37, 0x63, 0xbe, 0x74, 0xdf,
	0xfc, 0xa1, 0xe9, 0x44, 0xca, 0x33, 0xac, 0xcf, 0x9d, 0x95, 0x62, 0x2a, 0x67, 0xa7, 0x18, 0x8b,
	0x5d, 0x06, 0x91, 0x4b, 0xb2, 0xef, 0xe5, 0x7d, 0x50, 0x1a, 0xd3, 0x9c, 0x7d, 0x03, 0xe6, 0xed,
	0x3f, 0x97, 0x29, 0x19, 0x62, 0xc3, 0x5a, 0x16, 0xde, 0x2b, 0x50, 0xb9, 0x2d, 0xf3, 0x5f, 0x9f,
	0xc7, 0x34, 0xfb, 0x71, 0xa2, 0x5e, 0x9b, 0x63, 0xbf, 0x1b, 0x25, 0xa1, 0x96, 0xb5, 0x0b, 0xa4,
	0x3b, 0xd2, 0x8c, 0x53, 0x12, 0x0b, 0xff, 0x59, 0xc8, 0x47, 0xbd, 0x31, 0x1c, 0xee, 0x33, 0xb8,
	0x6e, 0x85, 0xec, 0x1f, 0xad, 0xec, 0x2f, 0xcd, 0xd3, 0x07, 0x8a, 0xfb, 0x29, 0x14, 0x7e, 0x6d,
	0xfe, 0x88, 0xf2, 0x13, 0xd4, 0x29, 0xee, 0x35, 0x63, 0x6c, 0x59, 0x7e, 0x08, 0xdd, 0xdd, 0x5d,
	0x53, 0x1f, 0x15, 0x8a, 0x92, 0x55, 0x98, 0x55, 0x7c, 0x3a, 0xb5, 0x5e, 0x2d, 0x9c, 0x19, 0x15,
	0x86, 0x0c, 0xd1, 0xfa, 0xef, 0x26, 0xcd, 0xff, 0xdf, 0x3a, 0x94, 0x89, 0xc6, 0xf9, 0x1a, 0x4c,
	0x3e, 0xa6, 0x19, 0xb1, 0x43, 0x46, 0xbe, 0x09, 0xcb, 0xe3, 0xe4, 0x91, 0xfb, 0x50, 0x45, 0xc3,
	0x12, 0xdb, 0x6a, 0x96, 0xa5, 0x97, 0xed, 0x92, 0xa8, 0xa0, 0xef, 0x7d, 0xa8, 0x22, 0x5c, 0x60,
	0xb4, 0x96, 0x79, 0x36, 0x63, 0x0b, 0x20, 0x4f, 0xe8, 0xe4, 0xf6, 0x79, 0x35, 0xcf, 0xf2, 0x7b,
	0xe7, 0x56, 0x01, 0x64, 0x07, 0x96, 0x50, 0x57, 0x1c, 0xd1, 0xf9, 0xe4, 0xdd, 0x21, 0x0e, 0x6b,
	0xfd, 0x67, 0x55, 0x77, 0xe4, 0x29, 0xd4, 0x51, 0x43, 0x4b, 0x0c, 0x27, 0xcb, 0x43, 0xc4, 0xb6,
	0x4d, 0x6e, 0x0d, 0x8d, 0xd9, 0xcb, 0xdb, 0x5a, 0xfd, 0xe6, 0x93, 0xa3, 0x28, 0x3b, 0xee, 0x1f,
	0x34, 0x82, 0xb4, 0xbb, 0xda, 0xa5, 0x99, 0x1f, 0x7f, 0xc2, 0x33, 0x3f, 0x38, 0x51, 0xdf, 0x7e,
	0x2f, 0x5a, 0xed, 0x9d, 0x1c, 0xc9, 0x7f, 0x7d, 0xae, 0x0e, 0xd6, 0x0e, 0xa6, 0xc5, 0xd7, 0xa7,
	0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x4b, 0xcd, 0x64, 0xa1, 0x2a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MachineServiceClient is the client API for MachineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MachineServiceClient interface {
	Get(ctx context.Context, in *MachineGetRequest, opts ...grpc.CallOption) (*MachineResponse, error)
	Find(ctx context.Context, in *MachineFindRequest, opts ...grpc.CallOption) (*MachineListResponse, error)
	List(ctx context.Context, in *MachineListRequest, opts ...grpc.CallOption) (*MachineListResponse, error)
	IPMIReport(ctx context.Context, in *MachineIPMIReportRequest, opts ...grpc.CallOption) (*MachineIPMIReportResponse, error)
	FindIPMIMachine(ctx context.Context, in *MachineIPMIGetRequest, opts ...grpc.CallOption) (*MachineIPMIResponse, error)
	ListIPMIMachines(ctx context.Context, in *MachineIPMIFindRequest, opts ...grpc.CallOption) (*MachineIPMIListResponse, error)
}

type machineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMachineServiceClient(cc grpc.ClientConnInterface) MachineServiceClient {
	return &machineServiceClient{cc}
}

func (c *machineServiceClient) Get(ctx context.Context, in *MachineGetRequest, opts ...grpc.CallOption) (*MachineResponse, error) {
	out := new(MachineResponse)
	err := c.cc.Invoke(ctx, "/v1.MachineService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineServiceClient) Find(ctx context.Context, in *MachineFindRequest, opts ...grpc.CallOption) (*MachineListResponse, error) {
	out := new(MachineListResponse)
	err := c.cc.Invoke(ctx, "/v1.MachineService/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineServiceClient) List(ctx context.Context, in *MachineListRequest, opts ...grpc.CallOption) (*MachineListResponse, error) {
	out := new(MachineListResponse)
	err := c.cc.Invoke(ctx, "/v1.MachineService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineServiceClient) IPMIReport(ctx context.Context, in *MachineIPMIReportRequest, opts ...grpc.CallOption) (*MachineIPMIReportResponse, error) {
	out := new(MachineIPMIReportResponse)
	err := c.cc.Invoke(ctx, "/v1.MachineService/IPMIReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineServiceClient) FindIPMIMachine(ctx context.Context, in *MachineIPMIGetRequest, opts ...grpc.CallOption) (*MachineIPMIResponse, error) {
	out := new(MachineIPMIResponse)
	err := c.cc.Invoke(ctx, "/v1.MachineService/FindIPMIMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineServiceClient) ListIPMIMachines(ctx context.Context, in *MachineIPMIFindRequest, opts ...grpc.CallOption) (*MachineIPMIListResponse, error) {
	out := new(MachineIPMIListResponse)
	err := c.cc.Invoke(ctx, "/v1.MachineService/ListIPMIMachines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MachineServiceServer is the server API for MachineService service.
type MachineServiceServer interface {
	Get(context.Context, *MachineGetRequest) (*MachineResponse, error)
	Find(context.Context, *MachineFindRequest) (*MachineListResponse, error)
	List(context.Context, *MachineListRequest) (*MachineListResponse, error)
	IPMIReport(context.Context, *MachineIPMIReportRequest) (*MachineIPMIReportResponse, error)
	FindIPMIMachine(context.Context, *MachineIPMIGetRequest) (*MachineIPMIResponse, error)
	ListIPMIMachines(context.Context, *MachineIPMIFindRequest) (*MachineIPMIListResponse, error)
}

// UnimplementedMachineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMachineServiceServer struct {
}

func (*UnimplementedMachineServiceServer) Get(ctx context.Context, req *MachineGetRequest) (*MachineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedMachineServiceServer) Find(ctx context.Context, req *MachineFindRequest) (*MachineListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedMachineServiceServer) List(ctx context.Context, req *MachineListRequest) (*MachineListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedMachineServiceServer) IPMIReport(ctx context.Context, req *MachineIPMIReportRequest) (*MachineIPMIReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IPMIReport not implemented")
}
func (*UnimplementedMachineServiceServer) FindIPMIMachine(ctx context.Context, req *MachineIPMIGetRequest) (*MachineIPMIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindIPMIMachine not implemented")
}
func (*UnimplementedMachineServiceServer) ListIPMIMachines(ctx context.Context, req *MachineIPMIFindRequest) (*MachineIPMIListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListIPMIMachines not implemented")
}

func RegisterMachineServiceServer(s *grpc.Server, srv MachineServiceServer) {
	s.RegisterService(&_MachineService_serviceDesc, srv)
}

func _MachineService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachineGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MachineService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServiceServer).Get(ctx, req.(*MachineGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MachineService_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachineFindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServiceServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MachineService/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServiceServer).Find(ctx, req.(*MachineFindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MachineService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachineListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MachineService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServiceServer).List(ctx, req.(*MachineListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MachineService_IPMIReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachineIPMIReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServiceServer).IPMIReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MachineService/IPMIReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServiceServer).IPMIReport(ctx, req.(*MachineIPMIReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MachineService_FindIPMIMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachineIPMIGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServiceServer).FindIPMIMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MachineService/FindIPMIMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServiceServer).FindIPMIMachine(ctx, req.(*MachineIPMIGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MachineService_ListIPMIMachines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachineIPMIFindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServiceServer).ListIPMIMachines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.MachineService/ListIPMIMachines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServiceServer).ListIPMIMachines(ctx, req.(*MachineIPMIFindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MachineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.MachineService",
	HandlerType: (*MachineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _MachineService_Get_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _MachineService_Find_Handler,
		},
		{
			MethodName: "List",
			Handler:    _MachineService_List_Handler,
		},
		{
			MethodName: "IPMIReport",
			Handler:    _MachineService_IPMIReport_Handler,
		},
		{
			MethodName: "FindIPMIMachine",
			Handler:    _MachineService_FindIPMIMachine_Handler,
		},
		{
			MethodName: "ListIPMIMachines",
			Handler:    _MachineService_ListIPMIMachines_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/machine.proto",
}
