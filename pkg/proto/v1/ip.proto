syntax = "proto3";

option go_package = "github.com/metal-stack/metal-api/pkg/proto/v1";

package v1;

import "v1/common.proto";
import "v1/identifiable.proto";
import "google/protobuf/wrappers.proto";

service IPService {
//    rpc Create(IPCreateRequest) returns (IPResponse);
    rpc Allocate(IPAllocateRequest) returns (IPResponse);
    rpc Update(IPUpdateRequest) returns (IPResponse);
    rpc Delete(IPDeleteRequest) returns (IPResponse);
    rpc Get(IPGetRequest) returns (IPResponse);
    rpc Find(IPFindRequest) returns (IPListResponse);
    rpc List(IPListRequest) returns (IPListResponse);
}

message IP {
    v1.Common common = 1;
    string projectID = 2; // the project this ip address belongs to
    string networkID = 3; // the network this ip allocate request address belongs to
    enum Type {
        STATIC = 0;
        EPHEMERAL = 1;
    }
    Type type = 4; // the ip type, EPHEMERAL leads to automatic cleanup of the ip address, STATIC will enable re-use of the ip at a later point in time
    repeated google.protobuf.StringValue tags = 5; // free tags that you associate with this ip
}

message IPIdentifiable {
    string IPAddress = 1;
}

//message IPCreateRequest {
//    IP ip = 1;
//}

message IPAllocateRequest {
    IP IP = 1;
    google.protobuf.StringValue machineID = 2; // the machine id this ip should be associated with
}

message IPUpdateRequest {
    v1.Common common = 1;
    IPIdentifiable identifiable = 2;
    IP.Type type = 3; // the ip type, EPHEMERAL leads to automatic cleanup of the ip address, STATIC will enable re-use of the ip at a later point in time
    repeated google.protobuf.StringValue tags = 4; // free tags that you associate with this ip
}

message IPDeleteRequest {
    v1.Identifiable identifiable = 1;
}

message IPGetRequest {
    v1.Identifiable identifiable = 1;
}

message IPFindRequest {
    google.protobuf.StringValue IPAddress = 1 [json_name="ipaddress"];            // the address (ipv4 or ipv6) of this ip
    google.protobuf.StringValue ParentPrefixCidr = 2 [json_name="networkprefix"]; // the prefix of the network this ip address belongs to
    google.protobuf.StringValue NetworkID = 3 [json_name="networkid"];            // the network this ip allocate request address belongs to
    repeated google.protobuf.StringValue Tags = 4 [json_name="tags"];             // the tags that are assigned to this ip address
    google.protobuf.StringValue ProjectID = 5 [json_name="projectid"];            // the project this ip address belongs to, empty if not strong coupled
    google.protobuf.StringValue Type = 6 [json_name="type"];                      // the type of the ip address, ephemeral or static
    google.protobuf.StringValue MachineID = 7 [json_name="machineid"];            // the machine an ip address is associated to
}

message IPListRequest {}

message IPResponse {
    IP IP = 1;
    IPIdentifiable identifiable = 2;
}

message IPListResponse {
    repeated IPResponse ips = 1;
}
