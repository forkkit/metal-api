// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/partition.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// a partition has a distinct location in a data center, individual entities belong to a partition
type Partition struct {
	Common                     *Common               `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ImageURL                   *wrappers.StringValue `protobuf:"bytes,2,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	KernelURL                  *wrappers.StringValue `protobuf:"bytes,3,opt,name=KernelURL,proto3" json:"KernelURL,omitempty"`
	CommandLine                *wrappers.StringValue `protobuf:"bytes,4,opt,name=CommandLine,proto3" json:"CommandLine,omitempty"`
	MgmtServiceAddress         *wrappers.StringValue `protobuf:"bytes,5,opt,name=mgmtServiceAddress,proto3" json:"mgmtServiceAddress,omitempty"`
	PrivateNetworkPrefixLength *wrappers.UInt32Value `protobuf:"bytes,6,opt,name=privateNetworkPrefixLength,proto3" json:"privateNetworkPrefixLength,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}              `json:"-"`
	XXX_unrecognized           []byte                `json:"-"`
	XXX_sizecache              int32                 `json:"-"`
}

func (m *Partition) Reset()         { *m = Partition{} }
func (m *Partition) String() string { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()    {}
func (*Partition) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{0}
}

func (m *Partition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partition.Unmarshal(m, b)
}
func (m *Partition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partition.Marshal(b, m, deterministic)
}
func (m *Partition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partition.Merge(m, src)
}
func (m *Partition) XXX_Size() int {
	return xxx_messageInfo_Partition.Size(m)
}
func (m *Partition) XXX_DiscardUnknown() {
	xxx_messageInfo_Partition.DiscardUnknown(m)
}

var xxx_messageInfo_Partition proto.InternalMessageInfo

func (m *Partition) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *Partition) GetImageURL() *wrappers.StringValue {
	if m != nil {
		return m.ImageURL
	}
	return nil
}

func (m *Partition) GetKernelURL() *wrappers.StringValue {
	if m != nil {
		return m.KernelURL
	}
	return nil
}

func (m *Partition) GetCommandLine() *wrappers.StringValue {
	if m != nil {
		return m.CommandLine
	}
	return nil
}

func (m *Partition) GetMgmtServiceAddress() *wrappers.StringValue {
	if m != nil {
		return m.MgmtServiceAddress
	}
	return nil
}

func (m *Partition) GetPrivateNetworkPrefixLength() *wrappers.UInt32Value {
	if m != nil {
		return m.PrivateNetworkPrefixLength
	}
	return nil
}

type PartitionCreateRequest struct {
	Partition            *Partition `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PartitionCreateRequest) Reset()         { *m = PartitionCreateRequest{} }
func (m *PartitionCreateRequest) String() string { return proto.CompactTextString(m) }
func (*PartitionCreateRequest) ProtoMessage()    {}
func (*PartitionCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{1}
}

func (m *PartitionCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionCreateRequest.Unmarshal(m, b)
}
func (m *PartitionCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionCreateRequest.Marshal(b, m, deterministic)
}
func (m *PartitionCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionCreateRequest.Merge(m, src)
}
func (m *PartitionCreateRequest) XXX_Size() int {
	return xxx_messageInfo_PartitionCreateRequest.Size(m)
}
func (m *PartitionCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionCreateRequest proto.InternalMessageInfo

func (m *PartitionCreateRequest) GetPartition() *Partition {
	if m != nil {
		return m.Partition
	}
	return nil
}

type PartitionUpdateRequest struct {
	Partition            *Partition `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PartitionUpdateRequest) Reset()         { *m = PartitionUpdateRequest{} }
func (m *PartitionUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*PartitionUpdateRequest) ProtoMessage()    {}
func (*PartitionUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{2}
}

func (m *PartitionUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionUpdateRequest.Unmarshal(m, b)
}
func (m *PartitionUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionUpdateRequest.Marshal(b, m, deterministic)
}
func (m *PartitionUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionUpdateRequest.Merge(m, src)
}
func (m *PartitionUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_PartitionUpdateRequest.Size(m)
}
func (m *PartitionUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionUpdateRequest proto.InternalMessageInfo

func (m *PartitionUpdateRequest) GetPartition() *Partition {
	if m != nil {
		return m.Partition
	}
	return nil
}

type PartitionGetRequest struct {
	Identifiable         *Identifiable `protobuf:"bytes,1,opt,name=identifiable,proto3" json:"identifiable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PartitionGetRequest) Reset()         { *m = PartitionGetRequest{} }
func (m *PartitionGetRequest) String() string { return proto.CompactTextString(m) }
func (*PartitionGetRequest) ProtoMessage()    {}
func (*PartitionGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{3}
}

func (m *PartitionGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionGetRequest.Unmarshal(m, b)
}
func (m *PartitionGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionGetRequest.Marshal(b, m, deterministic)
}
func (m *PartitionGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionGetRequest.Merge(m, src)
}
func (m *PartitionGetRequest) XXX_Size() int {
	return xxx_messageInfo_PartitionGetRequest.Size(m)
}
func (m *PartitionGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionGetRequest proto.InternalMessageInfo

func (m *PartitionGetRequest) GetIdentifiable() *Identifiable {
	if m != nil {
		return m.Identifiable
	}
	return nil
}

type PartitionFindRequest struct {
	FindCriteria         *FindCriteria `protobuf:"bytes,1,opt,name=findCriteria,proto3" json:"findCriteria,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PartitionFindRequest) Reset()         { *m = PartitionFindRequest{} }
func (m *PartitionFindRequest) String() string { return proto.CompactTextString(m) }
func (*PartitionFindRequest) ProtoMessage()    {}
func (*PartitionFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{4}
}

func (m *PartitionFindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionFindRequest.Unmarshal(m, b)
}
func (m *PartitionFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionFindRequest.Marshal(b, m, deterministic)
}
func (m *PartitionFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionFindRequest.Merge(m, src)
}
func (m *PartitionFindRequest) XXX_Size() int {
	return xxx_messageInfo_PartitionFindRequest.Size(m)
}
func (m *PartitionFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionFindRequest proto.InternalMessageInfo

func (m *PartitionFindRequest) GetFindCriteria() *FindCriteria {
	if m != nil {
		return m.FindCriteria
	}
	return nil
}

type PartitionResponse struct {
	Partition            *Partition `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PartitionResponse) Reset()         { *m = PartitionResponse{} }
func (m *PartitionResponse) String() string { return proto.CompactTextString(m) }
func (*PartitionResponse) ProtoMessage()    {}
func (*PartitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{5}
}

func (m *PartitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionResponse.Unmarshal(m, b)
}
func (m *PartitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionResponse.Marshal(b, m, deterministic)
}
func (m *PartitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionResponse.Merge(m, src)
}
func (m *PartitionResponse) XXX_Size() int {
	return xxx_messageInfo_PartitionResponse.Size(m)
}
func (m *PartitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionResponse proto.InternalMessageInfo

func (m *PartitionResponse) GetPartition() *Partition {
	if m != nil {
		return m.Partition
	}
	return nil
}

type PartitionListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionListRequest) Reset()         { *m = PartitionListRequest{} }
func (m *PartitionListRequest) String() string { return proto.CompactTextString(m) }
func (*PartitionListRequest) ProtoMessage()    {}
func (*PartitionListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{6}
}

func (m *PartitionListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionListRequest.Unmarshal(m, b)
}
func (m *PartitionListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionListRequest.Marshal(b, m, deterministic)
}
func (m *PartitionListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionListRequest.Merge(m, src)
}
func (m *PartitionListRequest) XXX_Size() int {
	return xxx_messageInfo_PartitionListRequest.Size(m)
}
func (m *PartitionListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionListRequest proto.InternalMessageInfo

type PartitionListResponse struct {
	Partitions           []*Partition `protobuf:"bytes,1,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PartitionListResponse) Reset()         { *m = PartitionListResponse{} }
func (m *PartitionListResponse) String() string { return proto.CompactTextString(m) }
func (*PartitionListResponse) ProtoMessage()    {}
func (*PartitionListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{7}
}

func (m *PartitionListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionListResponse.Unmarshal(m, b)
}
func (m *PartitionListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionListResponse.Marshal(b, m, deterministic)
}
func (m *PartitionListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionListResponse.Merge(m, src)
}
func (m *PartitionListResponse) XXX_Size() int {
	return xxx_messageInfo_PartitionListResponse.Size(m)
}
func (m *PartitionListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionListResponse proto.InternalMessageInfo

func (m *PartitionListResponse) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

type ServerCapacity struct {
	Size                 string   `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	Total                uint64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Free                 uint64   `protobuf:"varint,3,opt,name=free,proto3" json:"free,omitempty"`
	Allocated            uint64   `protobuf:"varint,4,opt,name=allocated,proto3" json:"allocated,omitempty"`
	Faulty               uint64   `protobuf:"varint,5,opt,name=faulty,proto3" json:"faulty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerCapacity) Reset()         { *m = ServerCapacity{} }
func (m *ServerCapacity) String() string { return proto.CompactTextString(m) }
func (*ServerCapacity) ProtoMessage()    {}
func (*ServerCapacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{8}
}

func (m *ServerCapacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerCapacity.Unmarshal(m, b)
}
func (m *ServerCapacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerCapacity.Marshal(b, m, deterministic)
}
func (m *ServerCapacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerCapacity.Merge(m, src)
}
func (m *ServerCapacity) XXX_Size() int {
	return xxx_messageInfo_ServerCapacity.Size(m)
}
func (m *ServerCapacity) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerCapacity.DiscardUnknown(m)
}

var xxx_messageInfo_ServerCapacity proto.InternalMessageInfo

func (m *ServerCapacity) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *ServerCapacity) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ServerCapacity) GetFree() uint64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *ServerCapacity) GetAllocated() uint64 {
	if m != nil {
		return m.Allocated
	}
	return 0
}

func (m *ServerCapacity) GetFaulty() uint64 {
	if m != nil {
		return m.Faulty
	}
	return 0
}

type PartitionCapacity struct {
	Common               *Common           `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ServerCapacities     []*ServerCapacity `protobuf:"bytes,2,rep,name=serverCapacities,proto3" json:"serverCapacities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PartitionCapacity) Reset()         { *m = PartitionCapacity{} }
func (m *PartitionCapacity) String() string { return proto.CompactTextString(m) }
func (*PartitionCapacity) ProtoMessage()    {}
func (*PartitionCapacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ffc15cb0683cf40, []int{9}
}

func (m *PartitionCapacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionCapacity.Unmarshal(m, b)
}
func (m *PartitionCapacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionCapacity.Marshal(b, m, deterministic)
}
func (m *PartitionCapacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionCapacity.Merge(m, src)
}
func (m *PartitionCapacity) XXX_Size() int {
	return xxx_messageInfo_PartitionCapacity.Size(m)
}
func (m *PartitionCapacity) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionCapacity.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionCapacity proto.InternalMessageInfo

func (m *PartitionCapacity) GetCommon() *Common {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *PartitionCapacity) GetServerCapacities() []*ServerCapacity {
	if m != nil {
		return m.ServerCapacities
	}
	return nil
}

func init() {
	proto.RegisterType((*Partition)(nil), "v1.Partition")
	proto.RegisterType((*PartitionCreateRequest)(nil), "v1.PartitionCreateRequest")
	proto.RegisterType((*PartitionUpdateRequest)(nil), "v1.PartitionUpdateRequest")
	proto.RegisterType((*PartitionGetRequest)(nil), "v1.PartitionGetRequest")
	proto.RegisterType((*PartitionFindRequest)(nil), "v1.PartitionFindRequest")
	proto.RegisterType((*PartitionResponse)(nil), "v1.PartitionResponse")
	proto.RegisterType((*PartitionListRequest)(nil), "v1.PartitionListRequest")
	proto.RegisterType((*PartitionListResponse)(nil), "v1.PartitionListResponse")
	proto.RegisterType((*ServerCapacity)(nil), "v1.ServerCapacity")
	proto.RegisterType((*PartitionCapacity)(nil), "v1.PartitionCapacity")
}

func init() { proto.RegisterFile("v1/partition.proto", fileDescriptor_6ffc15cb0683cf40) }

var fileDescriptor_6ffc15cb0683cf40 = []byte{
	// 625 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdb, 0x6e, 0x13, 0x31,
	0x10, 0x55, 0x92, 0x6d, 0x44, 0xa6, 0x5c, 0x8a, 0x69, 0xcb, 0x12, 0x55, 0xa8, 0xda, 0x27, 0x24,
	0xd4, 0x5d, 0xa5, 0x05, 0x09, 0x51, 0xa9, 0x02, 0x22, 0x5a, 0x55, 0x8d, 0x50, 0xe5, 0xaa, 0x3c,
	0x20, 0x5e, 0x9c, 0xec, 0x64, 0x6b, 0x75, 0x6f, 0xd8, 0xce, 0x96, 0xf2, 0xcc, 0x0f, 0xf0, 0x41,
	0xfc, 0x1b, 0xda, 0x6b, 0xec, 0x96, 0x54, 0x81, 0x37, 0x7b, 0xe6, 0x9c, 0xe3, 0xb1, 0xe7, 0x8c,
	0x81, 0x64, 0x03, 0x2f, 0x65, 0x42, 0x71, 0xc5, 0x93, 0xd8, 0x4d, 0x45, 0xa2, 0x12, 0xd2, 0xce,
	0x06, 0xfd, 0x47, 0xd9, 0xc0, 0x9b, 0x24, 0x51, 0x54, 0x07, 0xfb, 0x1b, 0xd9, 0xc0, 0xe3, 0x3e,
	0xc6, 0x8a, 0x4f, 0x39, 0x1b, 0x87, 0x58, 0x85, 0x9f, 0x07, 0x49, 0x12, 0x84, 0xe8, 0x15, 0xbb,
	0xf1, 0x6c, 0xea, 0x5d, 0x09, 0x96, 0xa6, 0x28, 0x64, 0x99, 0x77, 0x7e, 0x75, 0xa0, 0x77, 0x5a,
	0xeb, 0x13, 0x07, 0xba, 0xa5, 0xa8, 0xdd, 0xda, 0x6e, 0xbd, 0x58, 0xdd, 0x05, 0x37, 0x1b, 0xb8,
	0xc3, 0x22, 0x42, 0xab, 0x0c, 0x79, 0x03, 0xf7, 0x8e, 0x23, 0x16, 0xe0, 0x39, 0x1d, 0xd9, 0xed,
	0x02, 0xb5, 0xe5, 0x96, 0x87, 0xb8, 0xf5, 0x21, 0xee, 0x99, 0x12, 0x3c, 0x0e, 0x3e, 0xb3, 0x70,
	0x86, 0xb4, 0x41, 0x93, 0xb7, 0xd0, 0x3b, 0x41, 0x11, 0x63, 0x98, 0x53, 0x3b, 0x4b, 0x50, 0xe7,
	0x70, 0x72, 0x00, 0xab, 0x79, 0x1d, 0x2c, 0xf6, 0x47, 0x3c, 0x46, 0xdb, 0x5a, 0x82, 0xad, 0x13,
	0xc8, 0x08, 0x48, 0x14, 0x44, 0xea, 0x0c, 0x45, 0xc6, 0x27, 0xf8, 0xde, 0xf7, 0x05, 0x4a, 0x69,
	0xaf, 0x2c, 0x21, 0xf3, 0x17, 0x1e, 0xf9, 0x0a, 0xfd, 0x54, 0xf0, 0x8c, 0x29, 0xfc, 0x84, 0xea,
	0x2a, 0x11, 0x97, 0xa7, 0x02, 0xa7, 0xfc, 0xfb, 0x08, 0xe3, 0x40, 0x5d, 0xd8, 0xdd, 0x05, 0xaa,
	0xe7, 0xc7, 0xb1, 0xda, 0xdb, 0x2d, 0x55, 0xef, 0xe0, 0x3b, 0x1f, 0x61, 0xb3, 0x69, 0xc9, 0x50,
	0x20, 0x53, 0x48, 0xf1, 0xdb, 0x0c, 0xa5, 0x22, 0x2f, 0xa1, 0xd7, 0x98, 0xa1, 0x6a, 0xd1, 0x83,
	0xbc, 0x45, 0x0d, 0x9c, 0xce, 0xf3, 0x86, 0xcc, 0x79, 0xea, 0xff, 0xaf, 0xcc, 0x09, 0x3c, 0x69,
	0xe2, 0x47, 0xa8, 0x6a, 0x8d, 0x57, 0x70, 0x5f, 0xb7, 0x5b, 0x25, 0xb3, 0x96, 0xcb, 0x1c, 0x6b,
	0x71, 0x6a, 0xa0, 0x9c, 0x11, 0xac, 0x37, 0x62, 0x87, 0x3c, 0xf6, 0x35, 0xb5, 0x29, 0x8f, 0xfd,
	0xa1, 0xe0, 0x0a, 0x05, 0x67, 0xba, 0xda, 0xa1, 0x16, 0xa7, 0x06, 0xca, 0x79, 0x07, 0x8f, 0xe7,
	0x25, 0xa3, 0x4c, 0x93, 0x58, 0xe2, 0xbf, 0x5d, 0x6e, 0x53, 0xab, 0x67, 0xc4, 0x65, 0x7d, 0x3b,
	0xe7, 0x10, 0x36, 0x6e, 0xc4, 0x2b, 0xf5, 0x1d, 0x80, 0x86, 0x2d, 0xed, 0xd6, 0x76, 0xe7, 0xb6,
	0xbc, 0x06, 0x70, 0x7e, 0xb6, 0xe0, 0x61, 0xee, 0x1d, 0x14, 0x43, 0x96, 0xb2, 0x09, 0x57, 0xd7,
	0x84, 0x80, 0x25, 0xf9, 0x8f, 0xf2, 0xc1, 0x7a, 0xb4, 0x58, 0x93, 0x75, 0x58, 0x51, 0x89, 0x62,
	0x61, 0x31, 0x50, 0x16, 0x2d, 0x37, 0x39, 0x72, 0x2a, 0x10, 0x8b, 0x51, 0xb1, 0x68, 0xb1, 0x26,
	0x5b, 0xd0, 0x63, 0x61, 0x98, 0x4c, 0x98, 0x42, 0xbf, 0x98, 0x02, 0x8b, 0xce, 0x03, 0x64, 0x13,
	0xba, 0x53, 0x36, 0x0b, 0xd5, 0x75, 0xe1, 0x6c, 0x8b, 0x56, 0x3b, 0xe7, 0x4a, 0x7b, 0xa8, 0xa6,
	0x90, 0x65, 0x86, 0xfd, 0x00, 0xd6, 0xa4, 0x5e, 0x3e, 0x47, 0x69, 0xb7, 0x8b, 0x4b, 0x93, 0x1c,
	0x6d, 0x5e, 0x8d, 0xde, 0xc2, 0xee, 0xfe, 0x6e, 0xc3, 0x5a, 0x73, 0x72, 0x35, 0x44, 0x64, 0x1f,
	0xba, 0xa5, 0xad, 0x49, 0xdf, 0x78, 0x39, 0xc3, 0xeb, 0xfd, 0x0d, 0xf3, 0x55, 0xeb, 0x06, 0xec,
	0x43, 0xb7, 0x34, 0xf3, 0x0d, 0xb2, 0xe1, 0xf0, 0x45, 0xe4, 0xd7, 0xd0, 0x39, 0x42, 0x45, 0x9e,
	0x1a, 0xd9, 0xb9, 0xa9, 0x17, 0x9f, 0x69, 0xe5, 0x2e, 0x24, 0xb6, 0x91, 0xd6, 0xfc, 0xdb, 0x7f,
	0x66, 0x64, 0x0c, 0xc7, 0xec, 0x83, 0x95, 0xef, 0x6f, 0x90, 0x35, 0xb3, 0xdd, 0x41, 0xfe, 0xe0,
	0x7d, 0xd9, 0x09, 0xb8, 0xba, 0x98, 0x8d, 0xdd, 0x49, 0x12, 0x79, 0x11, 0x2a, 0x16, 0xee, 0x48,
	0xc5, 0x26, 0x97, 0xd5, 0x9a, 0xa5, 0xdc, 0x4b, 0x2f, 0x83, 0xf2, 0x7b, 0xf7, 0xb2, 0xc1, 0xb8,
	0x5b, 0xac, 0xf6, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf6, 0xf3, 0x6f, 0xca, 0x38, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PartitionServiceClient is the client API for PartitionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PartitionServiceClient interface {
	Create(ctx context.Context, in *PartitionCreateRequest, opts ...grpc.CallOption) (*PartitionResponse, error)
	Update(ctx context.Context, in *PartitionUpdateRequest, opts ...grpc.CallOption) (*PartitionResponse, error)
	//    rpc Delete(PartitionDeleteRequest) returns (PartitionResponse);
	Get(ctx context.Context, in *PartitionGetRequest, opts ...grpc.CallOption) (*PartitionResponse, error)
	Find(ctx context.Context, in *PartitionFindRequest, opts ...grpc.CallOption) (*PartitionListResponse, error)
	List(ctx context.Context, in *PartitionListRequest, opts ...grpc.CallOption) (*PartitionListResponse, error)
}

type partitionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPartitionServiceClient(cc grpc.ClientConnInterface) PartitionServiceClient {
	return &partitionServiceClient{cc}
}

func (c *partitionServiceClient) Create(ctx context.Context, in *PartitionCreateRequest, opts ...grpc.CallOption) (*PartitionResponse, error) {
	out := new(PartitionResponse)
	err := c.cc.Invoke(ctx, "/v1.PartitionService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partitionServiceClient) Update(ctx context.Context, in *PartitionUpdateRequest, opts ...grpc.CallOption) (*PartitionResponse, error) {
	out := new(PartitionResponse)
	err := c.cc.Invoke(ctx, "/v1.PartitionService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partitionServiceClient) Get(ctx context.Context, in *PartitionGetRequest, opts ...grpc.CallOption) (*PartitionResponse, error) {
	out := new(PartitionResponse)
	err := c.cc.Invoke(ctx, "/v1.PartitionService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partitionServiceClient) Find(ctx context.Context, in *PartitionFindRequest, opts ...grpc.CallOption) (*PartitionListResponse, error) {
	out := new(PartitionListResponse)
	err := c.cc.Invoke(ctx, "/v1.PartitionService/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partitionServiceClient) List(ctx context.Context, in *PartitionListRequest, opts ...grpc.CallOption) (*PartitionListResponse, error) {
	out := new(PartitionListResponse)
	err := c.cc.Invoke(ctx, "/v1.PartitionService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PartitionServiceServer is the server API for PartitionService service.
type PartitionServiceServer interface {
	Create(context.Context, *PartitionCreateRequest) (*PartitionResponse, error)
	Update(context.Context, *PartitionUpdateRequest) (*PartitionResponse, error)
	//    rpc Delete(PartitionDeleteRequest) returns (PartitionResponse);
	Get(context.Context, *PartitionGetRequest) (*PartitionResponse, error)
	Find(context.Context, *PartitionFindRequest) (*PartitionListResponse, error)
	List(context.Context, *PartitionListRequest) (*PartitionListResponse, error)
}

// UnimplementedPartitionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPartitionServiceServer struct {
}

func (*UnimplementedPartitionServiceServer) Create(ctx context.Context, req *PartitionCreateRequest) (*PartitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPartitionServiceServer) Update(ctx context.Context, req *PartitionUpdateRequest) (*PartitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPartitionServiceServer) Get(ctx context.Context, req *PartitionGetRequest) (*PartitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPartitionServiceServer) Find(ctx context.Context, req *PartitionFindRequest) (*PartitionListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedPartitionServiceServer) List(ctx context.Context, req *PartitionListRequest) (*PartitionListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterPartitionServiceServer(s *grpc.Server, srv PartitionServiceServer) {
	s.RegisterService(&_PartitionService_serviceDesc, srv)
}

func _PartitionService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartitionCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartitionServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PartitionService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartitionServiceServer).Create(ctx, req.(*PartitionCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartitionService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartitionUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartitionServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PartitionService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartitionServiceServer).Update(ctx, req.(*PartitionUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartitionService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartitionGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartitionServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PartitionService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartitionServiceServer).Get(ctx, req.(*PartitionGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartitionService_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartitionFindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartitionServiceServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PartitionService/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartitionServiceServer).Find(ctx, req.(*PartitionFindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartitionService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartitionListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartitionServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PartitionService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartitionServiceServer).List(ctx, req.(*PartitionListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PartitionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.PartitionService",
	HandlerType: (*PartitionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PartitionService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PartitionService_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _PartitionService_Get_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _PartitionService_Find_Handler,
		},
		{
			MethodName: "List",
			Handler:    _PartitionService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/partition.proto",
}
